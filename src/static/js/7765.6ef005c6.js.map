{"version":3,"file":"static/js/7765.6ef005c6.js","mappings":"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","sources":["webpack://daili/./src/views/business-management/osprey-cloud-call/call-statistics/index.vue?e511","webpack://daili/./src/views/business-management/osprey-cloud-call/call-statistics/index.vue","webpack://daili/./src/views/business-management/osprey-cloud-call/call-statistics/index.vue?5c0d"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"call-statistics\" }\nconst _hoisted_2 = { class: \"form-container\" }\nconst _hoisted_3 = { class: \"search-box\" }\nconst _hoisted_4 = { class: \"text\" }\nconst _hoisted_5 = { class: \"table-container\" }\n\nimport { reactive, ref } from \"vue\";\r\nimport {\r\n  getDirectMinutesApi,\r\n  getDirectSummaryApi,\r\n  getMinutesApi,\r\n  getSummaryApi,\r\n} from \"@api/call-record\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst tabList = [\r\n  {\r\n    label: \"系统客户\",\r\n    value: \"0\",\r\n  },\r\n  {\r\n    label: \"接口客户\",\r\n    value: \"1\",\r\n  },\r\n];\r\nconst dateTypeList = [\r\n  {\r\n    label: \"本月\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"近7天\",\r\n    value: \"2\",\r\n  },\r\n  {\r\n    label: \"近30天\",\r\n    value: \"3\",\r\n  },\r\n  {\r\n    label: \"自定义时间\",\r\n    value: \"4\",\r\n  },\r\n];\r\nconst countList = [\r\n  {\r\n    label: \"子客户维度统计\",\r\n    value: \"0\",\r\n  },\r\n  {\r\n    label: \"线路维度统计\",\r\n    value: \"1\",\r\n  },\r\n];\r\nconst dateType = ref(\"1\");\r\nconst countType = ref(\"0\");\r\nconst searchDate = ref([]);\r\nconst activeIndex = ref(\"0\");\r\nconst selectMinDate = ref(\"\");\r\nconst customerMinutes = ref(\"0\");\r\nconst selectMaxDate = new Date(new Date().setDate(new Date().getDate())); // 可选中的最大时间\r\nconst pageData = reactive({\r\n  list: [],\r\n  pageSize: 10,\r\n  pageNumber: 1,\r\n  pageTotal: 0,\r\n});\r\nconst paramsData = reactive({\r\n  startTime: dayjs().startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n  endTime: dayjs().format(\"YYYY-MM-DD\"),\r\n});\r\n\r\n// const { getList, pageNumberChange, pageSizeChange, pageData, resetPageNumber } =\r\n//   usePage({\r\n//     listApi: api.value,\r\n//     props: {\r\n//       pageSize: \"pageSize\",\r\n//       pageNumber: \"pageNo\",\r\n//     },\r\n//     searchParams: () => {\r\n//       const directParams = {\r\n//         interfaceData: \"0\",\r\n//       };\r\n//       const interfaceParams = {\r\n//         businessType: \"1\",\r\n//         reportType: countType.value,\r\n//       };\r\n//       return {\r\n//         ...(activeIndex.value === \"0\" ? directParams : interfaceParams),\r\n//         startTime: paramsData.startTime,\r\n//         endTime: paramsData.endTime,\r\n//       };\r\n//     },\r\n//   });\r\nconst getList = async () => {\r\n  let api: any;\r\n  const params = {\r\n    pageNo: pageData.pageNumber,\r\n    pageSize: pageData.pageSize,\r\n    startTime: paramsData.startTime,\r\n    endTime: paramsData.endTime,\r\n  };\r\n  if (activeIndex.value === \"0\") {\r\n    api = getDirectSummaryApi;\r\n    Reflect.set(params, \"interfaceData\", \"0\");\r\n  } else {\r\n    api = getSummaryApi;\r\n    Reflect.set(params, \"businessType\", \"1\");\r\n    Reflect.set(params, \"reportType\", countType.value);\r\n  }\r\n  const { data } = await api.getData(params);\r\n  const { list, total } = api.handleData(data);\r\n  pageData.list = list;\r\n  pageData.pageTotal = total;\r\n};\r\nconst pageSizeChange = (value: number) => {\r\n  resetPageNumber();\r\n  pageData.pageSize = value;\r\n  getList();\r\n};\r\nconst pageNumberChange = (value: number) => {\r\n  pageData.pageNumber = value;\r\n  getList();\r\n};\r\n// 重置当前页码参数\r\nconst resetPageSize = () => {\r\n  pageData.pageSize = 10;\r\n};\r\n// 重置当前数量参数\r\nconst resetPageNumber = () => {\r\n  pageData.pageNumber = 1;\r\n};\r\nconst tabClick = (value: Record<any, string>) => {\r\n  activeIndex.value = value.value;\r\n  if (dateType.value === \"1\") {\r\n    if (activeIndex.value === \"0\") {\r\n      paramsData.startTime = dayjs().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n    } else {\r\n      paramsData.startTime = \"\";\r\n      paramsData.endTime = \"\";\r\n    }\r\n  }\r\n  if (activeIndex.value === \"0\") {\r\n    countType.value = \"0\";\r\n  }\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\nconst countChange = () => {\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\nconst getCustomerMinutes = async () => {\r\n  let api: any;\r\n  const params = {\r\n    startTime: paramsData.startTime,\r\n    endTime: paramsData.endTime,\r\n  };\r\n  if (activeIndex.value === \"0\") {\r\n    api = getDirectMinutesApi;\r\n    Reflect.set(params, \"interfaceData\", \"0\");\r\n  } else {\r\n    api = getMinutesApi;\r\n    Reflect.set(params, \"businessType\", \"1\");\r\n    Reflect.set(params, \"reportType\", countType.value);\r\n  }\r\n  const { data } = await api.getData(params);\r\n  const result = api.handleData(data);\r\n  customerMinutes.value = activeIndex.value === \"0\" ? result.customer : data;\r\n};\r\nconst changeDateType = () => {\r\n  switch (dateType.value) {\r\n    case \"1\":\r\n      if (activeIndex.value === \"0\") {\r\n        paramsData.startTime = dayjs().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n        paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      } else {\r\n        paramsData.startTime = \"\";\r\n        paramsData.endTime = \"\";\r\n      }\r\n      break;\r\n    case \"2\":\r\n      // 近7天的时间 年-月-日格式\r\n      paramsData.startTime = dayjs().subtract(7, \"days\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      break;\r\n    case \"3\":\r\n      // 近30天的时间 年-月-日格式\r\n      paramsData.startTime = dayjs().subtract(30, \"days\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      break;\r\n    case \"4\":\r\n      paramsData.startTime = paramsData.endTime = \"\";\r\n      break;\r\n  }\r\n  if (dateType.value !== \"4\") {\r\n    resetPageSize();\r\n    resetPageNumber();\r\n    getList();\r\n    getCustomerMinutes();\r\n  }\r\n};\r\nconst changeDate = () => {\r\n  if (searchDate.value && searchDate.value.length > 0) {\r\n    paramsData.startTime = searchDate.value[0];\r\n    paramsData.endTime = searchDate.value[1];\r\n  } else {\r\n    paramsData.startTime = paramsData.endTime = \"\";\r\n  }\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\n\r\nconst onPick = ([minDate, maxDate]) => {\r\n  selectMinDate.value = minDate;\r\n  if (maxDate) selectMinDate.value = \"\";\r\n};\r\nconst pickerOptions = (time) => {\r\n  let choseTime = time.getTime();\r\n  if (selectMinDate.value) {\r\n    // maxTime1 等于当天天数 + 90\r\n    const maxSelectMinDate = _.cloneDeep(selectMinDate.value);\r\n    const minSelectMinDate = _.cloneDeep(selectMinDate.value);\r\n    const maxTime = new Date(\r\n      maxSelectMinDate.setDate(maxSelectMinDate.getDate() + 90)\r\n    );\r\n    // minTime 等与当天签署 - 90天\r\n    const minTime = new Date(\r\n      minSelectMinDate.setDate(minSelectMinDate.getDate() - 90)\r\n    );\r\n    return !(\r\n      choseTime > minTime.getTime() &&\r\n      choseTime < maxTime.getTime() &&\r\n      choseTime < selectMaxDate.getTime()\r\n    );\r\n  }\r\n  return !(choseTime < selectMaxDate.getTime());\r\n};\r\ngetList();\r\ngetCustomerMinutes();\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_TabList = _resolveComponent(\"TabList\")!\n  const _component_el_option = _resolveComponent(\"el-option\")!\n  const _component_el_select = _resolveComponent(\"el-select\")!\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\")!\n  const _component_el_table_column = _resolveComponent(\"el-table-column\")!\n  const _component_TableEmpty = _resolveComponent(\"TableEmpty\")!\n  const _component_el_table = _resolveComponent(\"el-table\")!\n  const _component_PagePagination = _resolveComponent(\"PagePagination\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_TabList, {\n        list: tabList,\n        activeIndex: activeIndex.value,\n        onEmitTab: tabClick\n      }, null, 8, [\"activeIndex\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[3] || (_cache[3] = _createElementVNode(\"span\", { class: \"label\" }, \"时间筛选：\", -1)),\n        _createVNode(_component_el_select, {\n          placeholder: \"时间筛选\",\n          modelValue: dateType.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((dateType).value = $event)),\n          onChange: changeDateType\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList(dateTypeList, (item) => {\n              return _createVNode(_component_el_option, {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8, [\"label\", \"value\"])\n            }), 64))\n          ]),\n          _: 1\n        }, 8, [\"modelValue\"]),\n        (dateType.value === '4')\n          ? (_openBlock(), _createBlock(_component_el_date_picker, {\n              key: 0,\n              modelValue: searchDate.value,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchDate).value = $event)),\n              onChange: changeDate,\n              clearable: \"\",\n              type: \"daterange\",\n              \"range-separator\": \"~\",\n              \"start-placeholder\": \"开始时间\",\n              \"end-placeholder\": \"结束时间\",\n              \"value-format\": \"YYYY-MM-DD\",\n              \"disabled-date\": pickerOptions,\n              onCalendarChange: onPick\n            }, null, 8, [\"modelValue\"]))\n          : _createCommentVNode(\"\", true),\n        (activeIndex.value === '1')\n          ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 1,\n              modelValue: countType.value,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((countType).value = $event)),\n              onChange: countChange\n            }, {\n              default: _withCtx(() => [\n                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(countList, (item) => {\n                  return _createVNode(_component_el_option, {\n                    key: item.value,\n                    label: item.label,\n                    value: item.value\n                  }, null, 8, [\"label\", \"value\"])\n                }), 64))\n              ]),\n              _: 1\n            }, 8, [\"modelValue\"]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"span\", _hoisted_4, \"消耗总分钟数：\" + _toDisplayString(customerMinutes.value) + \"分钟\", 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createVNode(_component_el_table, {\n        data: pageData.list,\n        height: \"calc(100vh - 260px)\"\n      }, {\n        empty: _withCtx(() => [\n          _createVNode(_component_TableEmpty, { \"empty-text\": \"暂无数据\" })\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"date\",\n            key: \"date\",\n            label: \"日期\",\n            width: \"250px\"\n          }),\n          (countType.value === '1')\n            ? (_openBlock(), _createBlock(_component_el_table_column, {\n                align: \"center\",\n                prop: \"businessTypeName\",\n                key: \"businessTypeName\",\n                label: \"线路类型\",\n                width: \"250px\"\n              }))\n            : _createCommentVNode(\"\", true),\n          (countType.value === '1')\n            ? (_openBlock(), _createBlock(_component_el_table_column, {\n                align: \"center\",\n                prop: \"price\",\n                key: \"price\",\n                label: \"线路单价（元/分钟）\",\n                width: \"250px\"\n              }))\n            : _createCommentVNode(\"\", true),\n          (countType.value === '0')\n            ? (_openBlock(), _createBlock(_component_el_table_column, {\n                align: \"center\",\n                prop: \"companyName\",\n                key: \"companyName\",\n                label: \"企业名称\",\n                width: \"250px\"\n              }))\n            : _createCommentVNode(\"\", true),\n          (countType.value === '0')\n            ? (_openBlock(), _createBlock(_component_el_table_column, {\n                align: \"center\",\n                prop: \"companyCode\",\n                key: \"companyCode\",\n                label: \"企业代码\"\n              }))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"appKey\",\n            key: \"appKey\",\n            label: \"唯一标识码\"\n          }),\n          _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"timeConsume\",\n            key: \"timeConsume\",\n            label: \"通话分钟数\"\n          }),\n          (countType.value === '0')\n            ? (_openBlock(), _createBlock(_component_el_table_column, {\n                align: \"center\",\n                prop: \"seatSize\",\n                key: \"seatSize\",\n                label: \"总坐席数\"\n              }))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _: 1\n      }, 8, [\"data\"]),\n      _createVNode(_component_PagePagination, {\n        pageSize: pageData.pageSize,\n        pageNumber: pageData.pageNumber,\n        pageTotal: pageData.pageTotal,\n        onEmitPageSizeChange: pageSizeChange,\n        onEmitPageNumberChange: pageNumberChange\n      }, null, 8, [\"pageSize\", \"pageNumber\", \"pageTotal\"])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <!-- 通话统计-->\r\n  <div class=\"call-statistics\">\r\n    <div class=\"form-container\">\r\n      <TabList\r\n        :list=\"tabList\"\r\n        :activeIndex=\"activeIndex\"\r\n        @emitTab=\"tabClick\"\r\n      ></TabList>\r\n      <div class=\"search-box\">\r\n        <span class=\"label\">时间筛选：</span>\r\n        <el-select\r\n          placeholder=\"时间筛选\"\r\n          v-model=\"dateType\"\r\n          @change=\"changeDateType\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in dateTypeList\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n        <el-date-picker\r\n          v-if=\"dateType === '4'\"\r\n          v-model=\"searchDate\"\r\n          @change=\"changeDate\"\r\n          clearable\r\n          type=\"daterange\"\r\n          range-separator=\"~\"\r\n          start-placeholder=\"开始时间\"\r\n          end-placeholder=\"结束时间\"\r\n          value-format=\"YYYY-MM-DD\"\r\n          :disabled-date=\"pickerOptions\"\r\n          @calendar-change=\"onPick\"\r\n        >\r\n        </el-date-picker>\r\n        <template v-if=\"activeIndex === '1'\">\r\n          <el-select v-model=\"countType\" @change=\"countChange\">\r\n            <el-option\r\n              v-for=\"item in countList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </template>\r\n        <span class=\"text\">消耗总分钟数：{{ customerMinutes }}分钟</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-container\">\r\n      <!--   列表   -->\r\n      <el-table :data=\"pageData.list\" height=\"calc(100vh - 260px)\">\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"date\"\r\n          key=\"date\"\r\n          label=\"日期\"\r\n          width=\"250px\"\r\n        />\r\n        <el-table-column\r\n          v-if=\"countType === '1'\"\r\n          align=\"center\"\r\n          prop=\"businessTypeName\"\r\n          key=\"businessTypeName\"\r\n          label=\"线路类型\"\r\n          width=\"250px\"\r\n        />\r\n        <el-table-column\r\n          v-if=\"countType === '1'\"\r\n          align=\"center\"\r\n          prop=\"price\"\r\n          key=\"price\"\r\n          label=\"线路单价（元/分钟）\"\r\n          width=\"250px\"\r\n        />\r\n        <el-table-column\r\n          v-if=\"countType === '0'\"\r\n          align=\"center\"\r\n          prop=\"companyName\"\r\n          key=\"companyName\"\r\n          label=\"企业名称\"\r\n          width=\"250px\"\r\n        />\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"companyCode\"\r\n          key=\"companyCode\"\r\n          label=\"企业代码\"\r\n          v-if=\"countType === '0'\"\r\n        />\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"appKey\"\r\n          key=\"appKey\"\r\n          label=\"唯一标识码\"\r\n        />\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"timeConsume\"\r\n          key=\"timeConsume\"\r\n          label=\"通话分钟数\"\r\n        />\r\n        <el-table-column\r\n          align=\"center\"\r\n          prop=\"seatSize\"\r\n          key=\"seatSize\"\r\n          label=\"总坐席数\"\r\n          v-if=\"countType === '0'\"\r\n        />\r\n        <template #empty>\r\n          <TableEmpty empty-text=\"暂无数据\"></TableEmpty>\r\n        </template>\r\n      </el-table>\r\n      <!--   分页   -->\r\n      <PagePagination\r\n        :pageSize=\"pageData.pageSize\"\r\n        :pageNumber=\"pageData.pageNumber\"\r\n        :pageTotal=\"pageData.pageTotal\"\r\n        @emitPageSizeChange=\"pageSizeChange\"\r\n        @emitPageNumberChange=\"pageNumberChange\"\r\n      ></PagePagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport {\r\n  getDirectMinutesApi,\r\n  getDirectSummaryApi,\r\n  getMinutesApi,\r\n  getSummaryApi,\r\n} from \"@api/call-record\";\r\n\r\nconst tabList = [\r\n  {\r\n    label: \"系统客户\",\r\n    value: \"0\",\r\n  },\r\n  {\r\n    label: \"接口客户\",\r\n    value: \"1\",\r\n  },\r\n];\r\nconst dateTypeList = [\r\n  {\r\n    label: \"本月\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"近7天\",\r\n    value: \"2\",\r\n  },\r\n  {\r\n    label: \"近30天\",\r\n    value: \"3\",\r\n  },\r\n  {\r\n    label: \"自定义时间\",\r\n    value: \"4\",\r\n  },\r\n];\r\nconst countList = [\r\n  {\r\n    label: \"子客户维度统计\",\r\n    value: \"0\",\r\n  },\r\n  {\r\n    label: \"线路维度统计\",\r\n    value: \"1\",\r\n  },\r\n];\r\nconst dateType = ref(\"1\");\r\nconst countType = ref(\"0\");\r\nconst searchDate = ref([]);\r\nconst activeIndex = ref(\"0\");\r\nconst selectMinDate = ref(\"\");\r\nconst customerMinutes = ref(\"0\");\r\nconst selectMaxDate = new Date(new Date().setDate(new Date().getDate())); // 可选中的最大时间\r\nconst pageData = reactive({\r\n  list: [],\r\n  pageSize: 10,\r\n  pageNumber: 1,\r\n  pageTotal: 0,\r\n});\r\nconst paramsData = reactive({\r\n  startTime: dayjs().startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n  endTime: dayjs().format(\"YYYY-MM-DD\"),\r\n});\r\n\r\n// const { getList, pageNumberChange, pageSizeChange, pageData, resetPageNumber } =\r\n//   usePage({\r\n//     listApi: api.value,\r\n//     props: {\r\n//       pageSize: \"pageSize\",\r\n//       pageNumber: \"pageNo\",\r\n//     },\r\n//     searchParams: () => {\r\n//       const directParams = {\r\n//         interfaceData: \"0\",\r\n//       };\r\n//       const interfaceParams = {\r\n//         businessType: \"1\",\r\n//         reportType: countType.value,\r\n//       };\r\n//       return {\r\n//         ...(activeIndex.value === \"0\" ? directParams : interfaceParams),\r\n//         startTime: paramsData.startTime,\r\n//         endTime: paramsData.endTime,\r\n//       };\r\n//     },\r\n//   });\r\nconst getList = async () => {\r\n  let api: any;\r\n  const params = {\r\n    pageNo: pageData.pageNumber,\r\n    pageSize: pageData.pageSize,\r\n    startTime: paramsData.startTime,\r\n    endTime: paramsData.endTime,\r\n  };\r\n  if (activeIndex.value === \"0\") {\r\n    api = getDirectSummaryApi;\r\n    Reflect.set(params, \"interfaceData\", \"0\");\r\n  } else {\r\n    api = getSummaryApi;\r\n    Reflect.set(params, \"businessType\", \"1\");\r\n    Reflect.set(params, \"reportType\", countType.value);\r\n  }\r\n  const { data } = await api.getData(params);\r\n  const { list, total } = api.handleData(data);\r\n  pageData.list = list;\r\n  pageData.pageTotal = total;\r\n};\r\nconst pageSizeChange = (value: number) => {\r\n  resetPageNumber();\r\n  pageData.pageSize = value;\r\n  getList();\r\n};\r\nconst pageNumberChange = (value: number) => {\r\n  pageData.pageNumber = value;\r\n  getList();\r\n};\r\n// 重置当前页码参数\r\nconst resetPageSize = () => {\r\n  pageData.pageSize = 10;\r\n};\r\n// 重置当前数量参数\r\nconst resetPageNumber = () => {\r\n  pageData.pageNumber = 1;\r\n};\r\nconst tabClick = (value: Record<any, string>) => {\r\n  activeIndex.value = value.value;\r\n  if (dateType.value === \"1\") {\r\n    if (activeIndex.value === \"0\") {\r\n      paramsData.startTime = dayjs().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n    } else {\r\n      paramsData.startTime = \"\";\r\n      paramsData.endTime = \"\";\r\n    }\r\n  }\r\n  if (activeIndex.value === \"0\") {\r\n    countType.value = \"0\";\r\n  }\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\nconst countChange = () => {\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\nconst getCustomerMinutes = async () => {\r\n  let api: any;\r\n  const params = {\r\n    startTime: paramsData.startTime,\r\n    endTime: paramsData.endTime,\r\n  };\r\n  if (activeIndex.value === \"0\") {\r\n    api = getDirectMinutesApi;\r\n    Reflect.set(params, \"interfaceData\", \"0\");\r\n  } else {\r\n    api = getMinutesApi;\r\n    Reflect.set(params, \"businessType\", \"1\");\r\n    Reflect.set(params, \"reportType\", countType.value);\r\n  }\r\n  const { data } = await api.getData(params);\r\n  const result = api.handleData(data);\r\n  customerMinutes.value = activeIndex.value === \"0\" ? result.customer : data;\r\n};\r\nconst changeDateType = () => {\r\n  switch (dateType.value) {\r\n    case \"1\":\r\n      if (activeIndex.value === \"0\") {\r\n        paramsData.startTime = dayjs().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n        paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      } else {\r\n        paramsData.startTime = \"\";\r\n        paramsData.endTime = \"\";\r\n      }\r\n      break;\r\n    case \"2\":\r\n      // 近7天的时间 年-月-日格式\r\n      paramsData.startTime = dayjs().subtract(7, \"days\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      break;\r\n    case \"3\":\r\n      // 近30天的时间 年-月-日格式\r\n      paramsData.startTime = dayjs().subtract(30, \"days\").format(\"YYYY-MM-DD\");\r\n      paramsData.endTime = dayjs().format(\"YYYY-MM-DD\");\r\n      break;\r\n    case \"4\":\r\n      paramsData.startTime = paramsData.endTime = \"\";\r\n      break;\r\n  }\r\n  if (dateType.value !== \"4\") {\r\n    resetPageSize();\r\n    resetPageNumber();\r\n    getList();\r\n    getCustomerMinutes();\r\n  }\r\n};\r\nconst changeDate = () => {\r\n  if (searchDate.value && searchDate.value.length > 0) {\r\n    paramsData.startTime = searchDate.value[0];\r\n    paramsData.endTime = searchDate.value[1];\r\n  } else {\r\n    paramsData.startTime = paramsData.endTime = \"\";\r\n  }\r\n  resetPageSize();\r\n  resetPageNumber();\r\n  getList();\r\n  getCustomerMinutes();\r\n};\r\n\r\nconst onPick = ([minDate, maxDate]) => {\r\n  selectMinDate.value = minDate;\r\n  if (maxDate) selectMinDate.value = \"\";\r\n};\r\nconst pickerOptions = (time) => {\r\n  let choseTime = time.getTime();\r\n  if (selectMinDate.value) {\r\n    // maxTime1 等于当天天数 + 90\r\n    const maxSelectMinDate = _.cloneDeep(selectMinDate.value);\r\n    const minSelectMinDate = _.cloneDeep(selectMinDate.value);\r\n    const maxTime = new Date(\r\n      maxSelectMinDate.setDate(maxSelectMinDate.getDate() + 90)\r\n    );\r\n    // minTime 等与当天签署 - 90天\r\n    const minTime = new Date(\r\n      minSelectMinDate.setDate(minSelectMinDate.getDate() - 90)\r\n    );\r\n    return !(\r\n      choseTime > minTime.getTime() &&\r\n      choseTime < maxTime.getTime() &&\r\n      choseTime < selectMaxDate.getTime()\r\n    );\r\n  }\r\n  return !(choseTime < selectMaxDate.getTime());\r\n};\r\ngetList();\r\ngetCustomerMinutes();\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.search-box {\r\n  @include flex(center, center);\r\n\r\n  .el-input {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .el-select {\r\n    width: 150px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  :deep(.el-range-editor.el-input__wrapper) {\r\n    width: 260px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .label,\r\n  .text {\r\n    font-size: 14px;\r\n    color: #606266;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./index.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./index.vue?vue&type=style&index=0&id=268dc113&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-268dc113\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","tabList","label","value","dateTypeList","countList","dateType","ref","countType","searchDate","activeIndex","selectMinDate","customerMinutes","selectMaxDate","Date","setDate","getDate","pageData","reactive","list","pageSize","pageNumber","pageTotal","paramsData","startTime","dayjs","startOf","format","endTime","getList","async","api","params","pageNo","getDirectSummaryApi","Reflect","set","getSummaryApi","data","getData","total","handleData","pageSizeChange","resetPageNumber","pageNumberChange","resetPageSize","tabClick","getCustomerMinutes","countChange","getDirectMinutesApi","getMinutesApi","result","customer","changeDateType","subtract","changeDate","length","onPick","minDate","maxDate","pickerOptions","time","choseTime","getTime","maxSelectMinDate","_","cloneDeep","minSelectMinDate","maxTime","minTime","_ctx","_cache","_component_TabList","_resolveComponent","_component_el_option","_component_el_select","_component_el_date_picker","_component_el_table_column","_component_TableEmpty","_component_el_table","_component_PagePagination","_openBlock","_createElementBlock","_createElementVNode","_createVNode","onEmitTab","placeholder","modelValue","$event","onChange","default","_withCtx","_Fragment","_renderList","item","key","_createBlock","clearable","type","onCalendarChange","_createCommentVNode","_toDisplayString","height","empty","align","prop","width","onEmitPageSizeChange","onEmitPageNumberChange","__exports__"],"sourceRoot":""}