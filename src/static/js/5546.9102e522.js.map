{"version":3,"file":"static/js/5546.9102e522.js","mappings":"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","sources":["webpack://daili/./src/components/common/add-edit-business-label-dialog.vue?d76b","webpack://daili/./src/components/common/add-edit-business-label-dialog.vue","webpack://daili/./src/components/common/add-edit-business-label-dialog.vue?f9cc"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"business-label-content\" }\nconst _hoisted_2 = { class: \"dialog-footer\" }\n\nimport { reactive, defineAsyncComponent } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nimport {\r\n  companyLabelApi,\r\n  companyLabelGroupApi,\r\n} from \"@api/business-management-api\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'add-edit-business-label-dialog',\n  emits: [\"emitFunc\"],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\r\nconst CustomCheckboxButtonGroup = defineAsyncComponent(\r\n  () => import(\"@/components/common/custom-checkbox-button-group.vue\")\r\n);\r\n\r\nconst emits = __emit;\r\n\r\nconst initData = reactive<{\r\n  visible: boolean;\r\n  label: string[];\r\n  companyLabel: any[];\r\n  labelGroup: string[];\r\n  companyLabelGroup: any[];\r\n}>({\r\n  visible: false,\r\n  label: [],\r\n  companyLabel: [],\r\n  labelGroup: [],\r\n  companyLabelGroup: [],\r\n});\r\n// 行业标签分组\r\nconst getCompanyLabelGroup = async () => {\r\n  const { data } = await companyLabelGroupApi.getData();\r\n  initData.companyLabelGroup = companyLabelGroupApi.handleData(data);\r\n};\r\n// 行业标签\r\nconst getCompanyLabel = async (labelGroupId) => {\r\n  const params = {\r\n    labelGroupId,\r\n  };\r\n  const { data } = await companyLabelApi.getData(params);\r\n  initData.companyLabel = companyLabelApi.handleData(data);\r\n};\r\nconst handleCompanyLabelGroup = (value) => {\r\n  if (value.length) {\r\n    initData.label = initData.label.filter((item) => {\r\n      const labelList = item.split(\"&\");\r\n      return value.includes(labelList[1]);\r\n    });\r\n    getCompanyLabel(value.toString());\r\n  } else {\r\n    initData.label = [];\r\n    initData.companyLabel = [];\r\n  }\r\n};\r\nasync function handleSubmit() {\r\n  if (initData.labelGroup.length) {\r\n    if (!initData.label.length) {\r\n      ElMessage.warning(\"请选择标签\");\r\n      return;\r\n    } else {\r\n      const value = handleCompanyLabel(initData.label);\r\n      const labelText = value.map((groupItem) => {\r\n        const groupStr = groupItem?.group.labelGroupName;\r\n        const labelStr = groupItem.labels\r\n          .map((labelItem) => {\r\n            return labelItem.labelName;\r\n          })\r\n          .toString();\r\n        return `业务分类：${groupStr}；标签：${labelStr}`;\r\n      });\r\n      emits(\"emitFunc\", { value, labelText });\r\n      handleClose();\r\n    }\r\n  } else {\r\n    emits(\"emitFunc\");\r\n    handleClose();\r\n  }\r\n}\r\n// 处理业务标签\r\nconst handleCompanyLabel = (value) => {\r\n  const arr: any = [];\r\n  value.forEach((item) => {\r\n    const ids = item.split(\"&\");\r\n    const arrInfo = arr.find(\r\n      (item: Record<string, any>) => item.group.id === ids[1]\r\n    );\r\n    const labelInfo = initData.companyLabel.find(\r\n      (labelItem) => labelItem.id === ids[0]\r\n    );\r\n    if (!arrInfo) {\r\n      const labelGroupInfo = initData.companyLabelGroup.find(\r\n        (groupItem) => groupItem.value === ids[1]\r\n      );\r\n      arr.push({\r\n        group: {\r\n          id: labelGroupInfo?.value,\r\n          labelGroupName: labelGroupInfo?.label,\r\n        },\r\n        labels: [\r\n          {\r\n            id: labelInfo?.id,\r\n            labelName: labelInfo?.labelName,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      arrInfo.labels.push({\r\n        id: labelInfo.id,\r\n        labelName: labelInfo.labelName,\r\n      });\r\n    }\r\n  });\r\n  return arr.length ? arr : \"\";\r\n};\r\nfunction handleClose() {\r\n  initData.label = [];\r\n  initData.labelGroup = [];\r\n  initData.companyLabel = [];\r\n  initData.companyLabelGroup = [];\r\n  initData.visible = false;\r\n}\r\nasync function trigger(visible, info) {\r\n  initData.visible = visible;\r\n  const data = Object.assign({}, info);\r\n  await getCompanyLabelGroup();\r\n  initData.labelGroup = data.groupLabelValue;\r\n  await handleCompanyLabelGroup(initData.labelGroup);\r\n  initData.label = data.labelValue;\r\n}\r\n__expose({\r\n  trigger,\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\")!\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_dialog = _resolveComponent(\"el-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_el_dialog, {\n    modelValue: initData.visible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((initData.visible) = $event)),\n    title: \"新增业务标签\",\n    width: \"700px\",\n    class: \"custom-dialog\",\n    \"before-close\": handleClose\n  }, {\n    footer: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_el_button, { onClick: handleClose }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [\n            _createTextVNode(\"取消\")\n          ])),\n          _: 1\n        }),\n        _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: handleSubmit\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [\n            _createTextVNode(\"确定\")\n          ])),\n          _: 1\n        })\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_unref(CustomCheckboxButtonGroup), {\n          class: \"group-list\",\n          direction: \"column\",\n          list: initData.companyLabelGroup,\n          modelValue: initData.labelGroup,\n          \"onUpdate:modelValue\": [\n            _cache[0] || (_cache[0] = ($event: any) => ((initData.labelGroup) = $event)),\n            handleCompanyLabelGroup\n          ]\n        }, null, 8, [\"list\", \"modelValue\"]),\n        _createVNode(_component_el_checkbox_group, {\n          modelValue: initData.label,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((initData.label) = $event)),\n          class: \"label-list\"\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(initData.companyLabel, (labelItem) => {\n              return (_openBlock(), _createBlock(_component_el_checkbox, {\n                key: labelItem.id,\n                value: `${labelItem.id}&${labelItem.labelGroupId}`\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(labelItem.labelName), 1)\n                ]),\n                _: 2\n              }, 1032, [\"value\"]))\n            }), 128))\n          ]),\n          _: 1\n        }, 8, [\"modelValue\"])\n      ])\n    ]),\n    _: 1\n  }, 8, [\"modelValue\"]))\n}\n}\n\n})","<template>\r\n  <el-dialog\r\n    v-model=\"initData.visible\"\r\n    title=\"新增业务标签\"\r\n    width=\"700px\"\r\n    class=\"custom-dialog\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <div class=\"business-label-content\">\r\n      <CustomCheckboxButtonGroup\r\n        class=\"group-list\"\r\n        direction=\"column\"\r\n        :list=\"initData.companyLabelGroup\"\r\n        v-model=\"initData.labelGroup\"\r\n        @update:modelValue=\"handleCompanyLabelGroup\"\r\n      ></CustomCheckboxButtonGroup>\r\n      <el-checkbox-group v-model=\"initData.label\" class=\"label-list\">\r\n        <el-checkbox\r\n          v-for=\"labelItem in initData.companyLabel\"\r\n          :key=\"labelItem.id\"\r\n          :value=\"`${labelItem.id}&${labelItem.labelGroupId}`\"\r\n          >{{ labelItem.labelName }}</el-checkbox\r\n        >\r\n      </el-checkbox-group>\r\n    </div>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { reactive, defineAsyncComponent } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nimport {\r\n  companyLabelApi,\r\n  companyLabelGroupApi,\r\n} from \"@api/business-management-api\";\r\n\r\nconst CustomCheckboxButtonGroup = defineAsyncComponent(\r\n  () => import(\"@/components/common/custom-checkbox-button-group.vue\")\r\n);\r\n\r\nconst emits = defineEmits<{\r\n  (e: \"emitFunc\", data?: { value: any[]; labelText: any[] });\r\n}>();\r\n\r\nconst initData = reactive<{\r\n  visible: boolean;\r\n  label: string[];\r\n  companyLabel: any[];\r\n  labelGroup: string[];\r\n  companyLabelGroup: any[];\r\n}>({\r\n  visible: false,\r\n  label: [],\r\n  companyLabel: [],\r\n  labelGroup: [],\r\n  companyLabelGroup: [],\r\n});\r\n// 行业标签分组\r\nconst getCompanyLabelGroup = async () => {\r\n  const { data } = await companyLabelGroupApi.getData();\r\n  initData.companyLabelGroup = companyLabelGroupApi.handleData(data);\r\n};\r\n// 行业标签\r\nconst getCompanyLabel = async (labelGroupId) => {\r\n  const params = {\r\n    labelGroupId,\r\n  };\r\n  const { data } = await companyLabelApi.getData(params);\r\n  initData.companyLabel = companyLabelApi.handleData(data);\r\n};\r\nconst handleCompanyLabelGroup = (value) => {\r\n  if (value.length) {\r\n    initData.label = initData.label.filter((item) => {\r\n      const labelList = item.split(\"&\");\r\n      return value.includes(labelList[1]);\r\n    });\r\n    getCompanyLabel(value.toString());\r\n  } else {\r\n    initData.label = [];\r\n    initData.companyLabel = [];\r\n  }\r\n};\r\nasync function handleSubmit() {\r\n  if (initData.labelGroup.length) {\r\n    if (!initData.label.length) {\r\n      ElMessage.warning(\"请选择标签\");\r\n      return;\r\n    } else {\r\n      const value = handleCompanyLabel(initData.label);\r\n      const labelText = value.map((groupItem) => {\r\n        const groupStr = groupItem?.group.labelGroupName;\r\n        const labelStr = groupItem.labels\r\n          .map((labelItem) => {\r\n            return labelItem.labelName;\r\n          })\r\n          .toString();\r\n        return `业务分类：${groupStr}；标签：${labelStr}`;\r\n      });\r\n      emits(\"emitFunc\", { value, labelText });\r\n      handleClose();\r\n    }\r\n  } else {\r\n    emits(\"emitFunc\");\r\n    handleClose();\r\n  }\r\n}\r\n// 处理业务标签\r\nconst handleCompanyLabel = (value) => {\r\n  const arr: any = [];\r\n  value.forEach((item) => {\r\n    const ids = item.split(\"&\");\r\n    const arrInfo = arr.find(\r\n      (item: Record<string, any>) => item.group.id === ids[1]\r\n    );\r\n    const labelInfo = initData.companyLabel.find(\r\n      (labelItem) => labelItem.id === ids[0]\r\n    );\r\n    if (!arrInfo) {\r\n      const labelGroupInfo = initData.companyLabelGroup.find(\r\n        (groupItem) => groupItem.value === ids[1]\r\n      );\r\n      arr.push({\r\n        group: {\r\n          id: labelGroupInfo?.value,\r\n          labelGroupName: labelGroupInfo?.label,\r\n        },\r\n        labels: [\r\n          {\r\n            id: labelInfo?.id,\r\n            labelName: labelInfo?.labelName,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      arrInfo.labels.push({\r\n        id: labelInfo.id,\r\n        labelName: labelInfo.labelName,\r\n      });\r\n    }\r\n  });\r\n  return arr.length ? arr : \"\";\r\n};\r\nfunction handleClose() {\r\n  initData.label = [];\r\n  initData.labelGroup = [];\r\n  initData.companyLabel = [];\r\n  initData.companyLabelGroup = [];\r\n  initData.visible = false;\r\n}\r\nasync function trigger(visible, info) {\r\n  initData.visible = visible;\r\n  const data = Object.assign({}, info);\r\n  await getCompanyLabelGroup();\r\n  initData.labelGroup = data.groupLabelValue;\r\n  await handleCompanyLabelGroup(initData.labelGroup);\r\n  initData.label = data.labelValue;\r\n}\r\ndefineExpose({\r\n  trigger,\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.business-label-content {\r\n  display: flex;\r\n  height: 50vh;\r\n  overflow: auto;\r\n  .group-list,\r\n  .label-list {\r\n    height: 100%;\r\n    overflow: auto;\r\n    padding-right: 5px;\r\n    &::-webkit-scrollbar {\r\n      width: 2px;\r\n      height: 2px;\r\n    }\r\n  }\r\n  .group-list {\r\n    flex: 0 0 106px;\r\n  }\r\n  .label-list {\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./add-edit-business-label-dialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./add-edit-business-label-dialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./add-edit-business-label-dialog.vue?vue&type=style&index=0&id=1fdbc231&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1fdbc231\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","emits","setup","__props","expose","__expose","emit","__emit","CustomCheckboxButtonGroup","defineAsyncComponent","initData","reactive","visible","label","companyLabel","labelGroup","companyLabelGroup","getCompanyLabelGroup","async","data","companyLabelGroupApi","getData","handleData","getCompanyLabel","params","labelGroupId","companyLabelApi","handleCompanyLabelGroup","value","length","filter","item","labelList","split","includes","toString","handleSubmit","ElMessage","warning","handleCompanyLabel","labelText","map","groupItem","groupStr","group","labelGroupName","labelStr","labels","labelItem","labelName","handleClose","arr","forEach","ids","arrInfo","find","id","labelInfo","push","labelGroupInfo","trigger","info","Object","assign","groupLabelValue","labelValue","_ctx","_cache","_component_el_checkbox","_resolveComponent","_component_el_checkbox_group","_component_el_button","_component_el_dialog","_openBlock","_createBlock","modelValue","$event","title","width","footer","_withCtx","_createElementVNode","_createVNode","onClick","default","_createTextVNode","_","type","_unref","direction","list","_createElementBlock","_Fragment","_renderList","key","_toDisplayString","__exports__"],"sourceRoot":""}