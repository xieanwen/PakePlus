{"version":3,"file":"static/js/8318.64148b73.js","mappings":"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","sources":["webpack://daili/./src/views/business-management/osprey-cloud-call/report/detail.vue?dcb1","webpack://daili/./src/views/business-management/osprey-cloud-call/report/detail.vue","webpack://daili/./src/views/business-management/osprey-cloud-call/report/detail.vue?3886"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"report-detail\" }\nconst _hoisted_2 = { class: \"header-info\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = { class: \"button-group\" }\n\nimport { ref, reactive, defineAsyncComponent } from \"vue\";\r\nimport { Loading } from \"@element-plus/icons-vue\";\r\n\r\nimport { serviceName } from \"@assets/common\";\r\nimport { useVueRouter } from \"@assets/useHook\";\r\nimport { LocalStorage } from \"jz-tool-lib\";\r\n\r\nimport { downloadFile } from \"@/api/download-api\";\r\nimport {\r\n  industryTreeApi,\r\n  electronReportingDetailApi,\r\n} from \"@api/business-management-api\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  ...{\r\n  name: \"businessManagement.ospreyCloudCall.report.detail\",\r\n},\n  __name: 'detail',\n  setup(__props) {\n\r\nconst BasicInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/basic-info.vue\"\r\n    )\r\n);\r\nconst OtherInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/other-info.vue\"\r\n    )\r\n);\r\nconst EmpowerInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/empower-info.vue\"\r\n    )\r\n);\r\nconst SpeechLibraryInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/speech-library-info.vue\"\r\n    )\r\n);\r\n\r\nconst { bd_userInfo: userInfo } = LocalStorage.batchGetItem([\"bd_userInfo\"]);\r\nconst { routeQuery } = useVueRouter();\r\nconst previewImageRef = ref();\r\nconst industryList = ref<any>([]);\r\nconst initData = reactive({\r\n  baseInfo: {},\r\n  otherInfo: {},\r\n  stubReportFileId: \"\",\r\n  empowerPromiseLink: \"\",\r\n  stubReportLoading: false,\r\n  reportInfoLoading: false,\r\n});\r\n\r\nfunction previewImage({ title, imgList, index }) {\r\n  previewImageRef.value.trigger(true, title, imgList, index);\r\n}\r\n// 获取行业列表、话术模板列表\r\nfunction getAllList() {\r\n  Promise.all([getIndustryTree()]).then((res) => {\r\n    industryList.value = res[0];\r\n    getDetail();\r\n  });\r\n}\r\n\r\n// 查询行业树\r\nconst getIndustryTree = async () => {\r\n  const { data } = await industryTreeApi.getData();\r\n  return industryTreeApi.handleData(data);\r\n};\r\n\r\nasync function getDetail() {\r\n  const params = {\r\n    id: routeQuery.value.id,\r\n    companyId: routeQuery.value.companyId,\r\n  };\r\n  const { data } = await electronReportingDetailApi.getData(params);\r\n  const { baseInfo, empowerPromiseLink, stubReportFileId, otherInfo } =\r\n    electronReportingDetailApi.handleData(data, industryList.value);\r\n  initData.baseInfo = baseInfo;\r\n  initData.stubReportFileId = stubReportFileId;\r\n  initData.empowerPromiseLink = empowerPromiseLink;\r\n  initData.otherInfo = otherInfo;\r\n}\r\n// 下载pdf\r\nfunction downloadReportInfo() {\r\n  const params = {\r\n    api: `${serviceName.callRest}/reported/downloadReportedInfo`,\r\n    method: \"post\",\r\n    formData: {\r\n      companyId: routeQuery.value.companyId,\r\n      companyName: routeQuery.value.companyName,\r\n      profileId: userInfo.profileId,\r\n      reportedId: routeQuery.value.id,\r\n    },\r\n  };\r\n  downloadFile(params);\r\n}\r\ngetAllList();\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_CustomPreviewImage = _resolveComponent(\"CustomPreviewImage\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h4\", _hoisted_3, _toDisplayString(initData.baseInfo.enterpriseInfo?.companyName), 1),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createVNode(_component_el_button, {\n          \"loading-icon\": _unref(Loading),\n          loading: initData.reportInfoLoading,\n          onClick: downloadReportInfo\n        }, {\n          default: _withCtx(() => _cache[0] || (_cache[0] = [\n            _createTextVNode(\"下载报备资料\")\n          ])),\n          _: 1\n        }, 8, [\"loading-icon\", \"loading\"])\n      ])\n    ]),\n    _createVNode(_unref(BasicInfo), {\n      baseInfo: initData.baseInfo,\n      onEmitFunc: previewImage\n    }, null, 8, [\"baseInfo\"]),\n    _createVNode(_unref(OtherInfo), {\n      otherInfo: initData.otherInfo,\n      onEmitFunc: previewImage\n    }, null, 8, [\"otherInfo\"]),\n    _createVNode(_unref(EmpowerInfo), {\n      empowerPromiseLink: initData.empowerPromiseLink,\n      onEmitFunc: previewImage\n    }, null, 8, [\"empowerPromiseLink\"]),\n    _createVNode(_unref(SpeechLibraryInfo)),\n    _createVNode(_component_CustomPreviewImage, {\n      ref_key: \"previewImageRef\",\n      ref: previewImageRef\n    }, null, 512)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"report-detail\">\r\n    <div class=\"header-info\">\r\n      <h4 class=\"title\">{{ initData.baseInfo.enterpriseInfo?.companyName }}</h4>\r\n      <div class=\"button-group\">\r\n        <el-button\r\n          :loading-icon=\"Loading\"\r\n          :loading=\"initData.reportInfoLoading\"\r\n          @click=\"downloadReportInfo\"\r\n          >下载报备资料</el-button\r\n        >\r\n        <!--        <el-button-->\r\n        <!--          :loading-icon=\"Loading\"-->\r\n        <!--          :loading=\"initData.stubReportLoading\"-->\r\n        <!--          type=\"primary\"-->\r\n        <!--          @click=\"downloadStubReport\"-->\r\n        <!--          >下载存证报告</el-button-->\r\n        <!--        >-->\r\n      </div>\r\n    </div>\r\n    <BasicInfo\r\n      :baseInfo=\"initData.baseInfo\"\r\n      @emitFunc=\"previewImage\"\r\n    ></BasicInfo>\r\n    <OtherInfo\r\n      :otherInfo=\"initData.otherInfo\"\r\n      @emitFunc=\"previewImage\"\r\n    ></OtherInfo>\r\n    <EmpowerInfo\r\n      :empowerPromiseLink=\"initData.empowerPromiseLink\"\r\n      @emitFunc=\"previewImage\"\r\n    ></EmpowerInfo>\r\n    <SpeechLibraryInfo></SpeechLibraryInfo>\r\n    <CustomPreviewImage ref=\"previewImageRef\"></CustomPreviewImage>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, defineAsyncComponent } from \"vue\";\r\nimport { Loading } from \"@element-plus/icons-vue\";\r\n\r\nimport { serviceName } from \"@assets/common\";\r\nimport { useVueRouter } from \"@assets/useHook\";\r\nimport { LocalStorage } from \"jz-tool-lib\";\r\n\r\nimport { downloadFile } from \"@/api/download-api\";\r\nimport {\r\n  industryTreeApi,\r\n  electronReportingDetailApi,\r\n} from \"@api/business-management-api\";\r\n\r\nconst BasicInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/basic-info.vue\"\r\n    )\r\n);\r\nconst OtherInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/other-info.vue\"\r\n    )\r\n);\r\nconst EmpowerInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/empower-info.vue\"\r\n    )\r\n);\r\nconst SpeechLibraryInfo = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/speech-library-info.vue\"\r\n    )\r\n);\r\ndefineOptions({\r\n  name: \"businessManagement.ospreyCloudCall.report.detail\",\r\n});\r\nconst { bd_userInfo: userInfo } = LocalStorage.batchGetItem([\"bd_userInfo\"]);\r\nconst { routeQuery } = useVueRouter();\r\nconst previewImageRef = ref();\r\nconst industryList = ref<any>([]);\r\nconst initData = reactive({\r\n  baseInfo: {},\r\n  otherInfo: {},\r\n  stubReportFileId: \"\",\r\n  empowerPromiseLink: \"\",\r\n  stubReportLoading: false,\r\n  reportInfoLoading: false,\r\n});\r\n\r\nfunction previewImage({ title, imgList, index }) {\r\n  previewImageRef.value.trigger(true, title, imgList, index);\r\n}\r\n// 获取行业列表、话术模板列表\r\nfunction getAllList() {\r\n  Promise.all([getIndustryTree()]).then((res) => {\r\n    industryList.value = res[0];\r\n    getDetail();\r\n  });\r\n}\r\n\r\n// 查询行业树\r\nconst getIndustryTree = async () => {\r\n  const { data } = await industryTreeApi.getData();\r\n  return industryTreeApi.handleData(data);\r\n};\r\n\r\nasync function getDetail() {\r\n  const params = {\r\n    id: routeQuery.value.id,\r\n    companyId: routeQuery.value.companyId,\r\n  };\r\n  const { data } = await electronReportingDetailApi.getData(params);\r\n  const { baseInfo, empowerPromiseLink, stubReportFileId, otherInfo } =\r\n    electronReportingDetailApi.handleData(data, industryList.value);\r\n  initData.baseInfo = baseInfo;\r\n  initData.stubReportFileId = stubReportFileId;\r\n  initData.empowerPromiseLink = empowerPromiseLink;\r\n  initData.otherInfo = otherInfo;\r\n}\r\n// 下载pdf\r\nfunction downloadReportInfo() {\r\n  const params = {\r\n    api: `${serviceName.callRest}/reported/downloadReportedInfo`,\r\n    method: \"post\",\r\n    formData: {\r\n      companyId: routeQuery.value.companyId,\r\n      companyName: routeQuery.value.companyName,\r\n      profileId: userInfo.profileId,\r\n      reportedId: routeQuery.value.id,\r\n    },\r\n  };\r\n  downloadFile(params);\r\n}\r\ngetAllList();\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.header-info {\r\n  @include flex(center, space-between);\r\n  height: 100px;\r\n  padding: 0 32px;\r\n  border-radius: 12px;\r\n  background: #ffffff url(\"@/assets/images/badge-background.png\") center\r\n    no-repeat;\r\n  background-size: 100% 100%;\r\n\r\n  .title {\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #242934;\r\n    height: 36px;\r\n    line-height: 36px;\r\n    padding-left: 56px;\r\n    background: url(\"@/assets/images/company-badge.png\") left center no-repeat;\r\n    background-size: 36px 36px;\r\n  }\r\n}\r\n\r\n:deep(.basic-info),\r\n:deep(.other-info),\r\n:deep(.speech-info),\r\n:deep(.empower-info) {\r\n  padding: 40px;\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  margin-top: 20px;\r\n\r\n  > .title {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #242934;\r\n    line-height: 18px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./detail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./detail.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./detail.vue?vue&type=style&index=0&id=1401b82a&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1401b82a\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_defineComponent","name","__name","setup","__props","BasicInfo","defineAsyncComponent","OtherInfo","EmpowerInfo","SpeechLibraryInfo","bd_userInfo","userInfo","LocalStorage","batchGetItem","routeQuery","useVueRouter","previewImageRef","ref","industryList","initData","reactive","baseInfo","otherInfo","stubReportFileId","empowerPromiseLink","stubReportLoading","reportInfoLoading","previewImage","title","imgList","index","value","trigger","getAllList","Promise","all","getIndustryTree","then","res","getDetail","async","data","industryTreeApi","getData","handleData","params","id","companyId","electronReportingDetailApi","downloadReportInfo","api","serviceName","callRest","method","formData","companyName","profileId","reportedId","downloadFile","_ctx","_cache","_initData$baseInfo$en","_component_el_button","_resolveComponent","_component_CustomPreviewImage","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","enterpriseInfo","_createVNode","_unref","Loading","loading","onClick","default","_withCtx","_createTextVNode","_","onEmitFunc","ref_key","__exports__"],"sourceRoot":""}