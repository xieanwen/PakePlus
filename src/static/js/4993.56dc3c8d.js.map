{"version":3,"file":"static/js/4993.56dc3c8d.js","mappings":"6RAGA,MAAMA,EAAa,CAAEC,MAAO,SACtBC,EAAa,CAAED,MAAO,aACtBE,EAAa,CAAC,cACdC,EAAa,CACjBC,IAAK,EACLJ,MAAO,UAEHK,EAAa,CAAEL,MAAO,aAoB5B,OAA4BM,EAAAA,EAAAA,IAAiB,CAE3CC,KAAM,QAENC,OAAQ,QACRC,KAAAA,CAAMC,GCmCR,MAAMC,GAAUC,EAAAA,EAAAA,OACV,WAAEC,IAAeC,EAAAA,EAAAA,OACjB,WAAEC,EAAU,OAAEC,IAAWC,EAAAA,EAAAA,MACzBC,EAAYC,EAAAA,GAAaC,QAAQ,gBAEjCC,GAAaC,EAAAA,EAAAA,IAAgB,CACjCC,WAAW,EACXC,WAAY,GACZC,aAAc,aAEVC,GAAWJ,EAAAA,EAAAA,IAAgB,CAC/BK,UAAW,GACXC,SAAU,KAINC,EAAQ,CACZF,UAAW,CACT,CACEG,UAAWA,CAACC,EAAMC,EAAOC,MACvBC,EAAAA,EAAAA,IAAkBH,EAAMC,EAAOC,EAAS,EAE1CE,QAAS,SAGbP,SAAU,CACR,CACEQ,UAAU,EACVC,QAAS,QACTF,QAAS,UAMTG,EAASC,EAAEC,UACfC,UACE,IACE,MAAMC,QAAc/B,EAAQqB,MAAMW,WAClC,IAAKD,EAAO,OAGZ,MAAME,QAAqBC,IAC3B,IAAKD,EAAaE,MAEhB,YADIF,EAAaG,OAAM1B,EAAWG,WAAaoB,EAAaG,KAAKC,MAKnE,MAAMC,QAAoBC,IAC1B,IAAKD,EAAYH,MAAO,CACtB,GAAIG,EAAYF,MAAqC,IAA7BE,EAAYF,KAAKI,QAAe,CACtD,MAAMC,QAAqBC,GAAkB,GACzCD,EAAaL,MAAyC,IAAjCK,EAAaL,KAAKO,aACzCjC,EAAWG,WAAa4B,EAAaL,KAAKC,IAE9C,CACA,MACF,OAGMK,GAAkB,SAClBE,EAAeN,EAAYF,KAAKS,gBAChCC,UACAC,GACR,CAAE,MAAOC,GACPC,QAAQD,MAAM,QAASA,EACzB,IAEF,IACA,CAAEE,SAAS,EAAMC,UAAU,IAIvBjB,EAAoBJ,UACxBpB,EAAWG,WAAa,IACjBuC,EAAAA,EAAAA,IAAcC,EAAAA,GAAeC,QAAQvC,EAASC,aAIjDuB,EAAcT,UAClB,MAAMyB,EAAS,CACbC,KAAM,EACNC,aAAc,MACdC,SAAU3C,EAASE,SACnB0C,SAAU5C,EAASC,YAEf,KAAEoB,SAAewB,EAAAA,EAASN,QAAQC,GAClCV,EAAW,IAAS,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMS,SAAUgB,UAAWzB,EAAKyB,WAYtD,OAXArD,EAAAA,GAAasD,aAAa,CACxBC,YAAalB,EACbmB,iBAAkB5B,EAAK6B,KAAKC,cAI1BxD,EAAWE,UACbJ,EAAAA,GAAa2D,QAAQ,eAAgBpD,GAErCP,EAAAA,GAAa4D,WAAW,gBAEnB,CAAEjC,OAAO,EAAMC,OAAM,EAIxBM,EAAoBZ,UACxB,MAAMyB,EAAS,CAAEc,OAAMV,SAAU5C,EAASC,WAC1C,OAAOoC,EAAAA,EAAAA,IAAckB,EAAAA,GAAehB,QAAQC,GAAQ,EAIhDX,EAAiBd,UACrB,MAAM,YAAEyC,EAAW,UAAEV,EAAS,OAAEW,EAAM,UAAEC,EAAS,SAAEC,GAAa7B,EAC1DU,EAAS,CACbgB,cACAV,YACAW,SACAC,YACAd,SAAUe,GAEZ,OAAOC,EAAAA,GAAkBrB,QAAQC,EAAO,EAIpCT,EAAehB,UACnB,MAAM,KAAEM,SAAewC,EAAAA,GAAatB,UAC9BuB,EAAYD,EAAAA,GAAaE,WAAW1C,GAC1C5B,EAAAA,GAAa2D,QAAQ,eAAgBU,EAAU,EAI3C9B,EAAyBjB,UAC7B,MAAM,KAAEM,SAAe2C,EAAAA,GAAuBzB,UACxC0B,EAAe5E,EAAWiB,MAAM4D,UAEjCC,EAAAA,EAAAA,IAAanE,EAASE,WAGzBkE,EAAAA,GAAUC,QAAQ,QAClB5E,EAAAA,GAAasD,aAAa,CACxBuB,WAAgB,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,GAClBC,eAAoB,OAAJnD,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,YACtBC,eAAoB,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,YACtBC,gBAAqB,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,aACvBC,sBAA2B,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,qBAGL,KAAlB,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,mBACFrF,EAAO2E,GAAgB,eAEvB3E,EAAO2E,GAAgB,gCAdzB3E,EAAO,kBAgBf,EAII0F,EAAaA,KACe,aAA5BrF,EAAWI,aACbJ,EAAWI,aAAe,OAE1BJ,EAAWI,aAAe,UAC5B,EDvBF,OC0BIP,IACFG,EAAWE,WAAY,EACvBG,EAASE,SAAWV,EAAUU,SAC9BF,EAASC,UAAYT,EAAUS,WD7B1B,CAACgF,EAAUC,KAChB,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YACxCC,GAA0BD,EAAAA,EAAAA,IAAkB,gBAC5CE,GAAyBF,EAAAA,EAAAA,IAAkB,eAC3CG,GAAqBH,EAAAA,EAAAA,IAAkB,WAE7C,OAAQI,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOpH,EAAY,EAC3DqH,EAAAA,EAAAA,IAAaC,EAAAA,EAAiB,CAAEC,SAAU,WAC1CC,EAAAA,EAAAA,IAAoB,MAAOtH,EAAY,CACrC2G,EAAO,KAAOA,EAAO,IAAKW,EAAAA,EAAAA,IAAoB,KAAM,KAAM,QAAS,KACnEH,EAAAA,EAAAA,IAAaH,EAAoB,CAC/BO,QAAS,UACT5G,IAAKD,EACL8G,OAAOC,EAAAA,EAAAA,IAAOhG,GACdG,MAAOA,GACN,CACD8F,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBR,EAAAA,EAAAA,IAAaL,EAAyB,CAAEc,KAAM,aAAe,CAC3DF,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBR,EAAAA,EAAAA,IAAaP,EAAqB,CAChCiB,YAAYJ,EAAAA,EAAAA,IAAOhG,GAAUC,UAC7B,sBAAuBiF,EAAO,KAAOA,EAAO,GAAMmB,IAAkBL,EAAAA,EAAAA,IAAOhG,GAAUC,UAAaoG,GAClGC,eAAgB,CAAEC,MAAM,GACxBC,YAAa,OACZ,KAAM,EAAG,CAAC,kBAEf3F,EAAG,KAEL6E,EAAAA,EAAAA,IAAaL,EAAyB,CACpCc,KAAM,WACN7H,MAAO,iBACN,CACD2H,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBR,EAAAA,EAAAA,IAAaP,EAAqB,CAChCiB,YAAYJ,EAAAA,EAAAA,IAAOhG,GAAUE,SAC7B,sBAAuBgF,EAAO,KAAOA,EAAO,GAAMmB,IAAkBL,EAAAA,EAAAA,IAAOhG,GAAUE,SAAYmG,GACjGC,eAAgB,CAAEC,MAAM,GACxBC,YAAa,KACbC,MAAMT,EAAAA,EAAAA,IAAOrG,GAAYI,cACxB,KAAM,EAAG,CAAC,aAAc,WAC1ByF,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO,CACxCnH,MAAO,OACP,cAAe,OACfoI,QAAS1B,GACR,EACDa,EAAAA,EAAAA,IAAoB,MAAO,CACzB,aACkC,cAApCG,EAAAA,EAAAA,IAAOrG,GAAYI,aACf,sBACA,uBAED,KAAM,EAAGvB,OAEbwH,EAAAA,EAAAA,IAAOrG,GAAYG,aACf0F,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,IAAKhH,GAAYkI,EAAAA,EAAAA,KAAiBX,EAAAA,EAAAA,IAAOrG,GAAYG,YAAa,KACrG8G,EAAAA,EAAAA,IAAoB,IAAI,MAE9B/F,EAAG,KAEL6E,EAAAA,EAAAA,IAAaL,EAAyB,CAAE/G,MAAO,oBAAsB,CACnE2H,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBR,EAAAA,EAAAA,IAAaJ,EAAwB,CACnCc,YAAYJ,EAAAA,EAAAA,IAAOrG,GAAYE,UAC/B,sBAAuBqF,EAAO,KAAOA,EAAO,GAAMmB,IAAkBL,EAAAA,EAAAA,IAAOrG,GAAYE,UAAawG,GACpGQ,MAAO,QACN,KAAM,EAAG,CAAC,gBACbhB,EAAAA,EAAAA,IAAoB,OAAQ,CAC1BvH,MAAO,kBACPoI,QAASxB,EAAO,KAAOA,EAAO,GAAMmB,IAAiBL,EAAAA,EAAAA,IAAO1G,EAAP0G,CAAe,qBACnE,YAELnF,EAAG,KAEL6E,EAAAA,EAAAA,IAAaL,EAAyB,CAAE/G,MAAO,qBAAuB,CACpE2H,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAoB,MAAO,CACzBvH,MAAO,gBACPoI,QAASxB,EAAO,KAAOA,EAAO,GAE9C,IAAI4B,KAAUd,EAAAA,EAAAA,IAAOpF,KAAWoF,EAAAA,EAAAA,IAAOpF,EAAPoF,IAAkBc,KACjC,SAELjG,EAAG,OAGPA,EAAG,GACF,EAAG,CAAC,aAETgF,EAAAA,EAAAA,IAAoB,MAAOlH,GAAYgI,EAAAA,EAAAA,KAAiBX,EAAAA,EAAAA,IAAO7G,GAAY4H,WAAY,GACvF7B,EAAO,KAAOA,EAAO,IAAKW,EAAAA,EAAAA,IAAoB,MAAO,CAAEtB,GAAI,QAAU,MAAO,KAC5E,CAEJ,I,WErSA,MAAMyC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://daili/./src/views/login.vue?9118","webpack://daili/./src/views/login.vue","webpack://daili/./src/views/login.vue?e684"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"login\" }\nconst _hoisted_2 = { class: \"container\" }\nconst _hoisted_3 = [\"xlink:href\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"prompt\"\n}\nconst _hoisted_5 = { class: \"copyright\" }\n\nimport { ElMessage } from \"element-plus\";\r\nimport { ref, shallowReactive } from \"vue\";\r\nimport { multipleAwait } from \"@assets/common\";\r\nimport { testPassword, LocalStorage } from \"jz-tool-lib\";\r\nimport { checkoutTelephone } from \"@assets/validatorHook\";\r\nimport { useVueRouter, useVueStore } from \"@assets/useHook\";\r\n\r\nimport { certificationStatusApi } from \"@api/common-api\";\r\nimport {\r\n  loginApi,\r\n  loginVerifyApi,\r\n  loginRecordApi,\r\n  updateUserInfoApi,\r\n} from \"@api/login-register-api\";\r\nimport HeaderComponent from \"@components/login-regietr/header-component.vue\";\r\nimport { agentInfoApi } from \"@api/personal-center-api\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  ...{\r\n  name: \"login\",\r\n},\n  __name: 'login',\n  setup(__props) {\n\r\n\r\nconst formRef = ref();\r\nconst { storeState } = useVueStore();\r\nconst { routeQuery, goPage } = useVueRouter();\r\nconst loginForm = LocalStorage.getItem(\"bd_loginForm\");\r\n\r\nconst paramsData = shallowReactive({\r\n  keepLogin: false,\r\n  lockPrompt: \"\",\r\n  passwordType: \"password\",\r\n});\r\nconst formData = shallowReactive({\r\n  telephone: \"\",\r\n  password: \"\",\r\n});\r\n\r\n// 校验规则\r\nconst rules = {\r\n  telephone: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        checkoutTelephone(rule, value, callback);\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      required: true,\r\n      message: \"请输入密码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 登录验证\r\nconst submit = _.throttle(\r\n  async () => {\r\n    try {\r\n      const valid = await formRef.value.validate();\r\n      if (!valid) return;\r\n\r\n      // 校验账号是否锁定\r\n      const verifyResult = await handleLoginVerify();\r\n      if (!verifyResult.state) {\r\n        if (verifyResult.data) paramsData.lockPrompt = verifyResult.data.msg;\r\n        return;\r\n      }\r\n\r\n      // 登录\r\n      const loginResult = await handleLogin();\r\n      if (!loginResult.state) {\r\n        if (loginResult.data && loginResult.data.rspCode === 1) {\r\n          const recordResult = await handleLoginRecord(false);\r\n          if (recordResult.data && recordResult.data.statusCode === 1) {\r\n            paramsData.lockPrompt = recordResult.data.msg;\r\n          }\r\n        }\r\n        return;\r\n      }\r\n\r\n      // 登录成功后的操作\r\n      await handleLoginRecord(true);\r\n      await updateUserInfo(loginResult.data.userInfo);\r\n      await getAgentInfo();\r\n      await getCertificationStatus();\r\n    } catch (error) {\r\n      console.error(\"登录失败:\", error);\r\n    }\r\n  },\r\n  3000,\r\n  { leading: true, trailing: false }\r\n);\r\n\r\n// 登录前校验账号是否锁定\r\nconst handleLoginVerify = async () => {\r\n  paramsData.lockPrompt = \"\";\r\n  return multipleAwait(loginVerifyApi.getData(formData.telephone));\r\n};\r\n\r\n// 登录\r\nconst handleLogin = async () => {\r\n  const params = {\r\n    auto: 0,\r\n    terminaltype: \"WEB\",\r\n    passWord: formData.password,\r\n    userName: formData.telephone,\r\n  };\r\n  const { data } = await loginApi.getData(params);\r\n  const userInfo = { ...data?.userInfo, companyId: data.companyId };\r\n  LocalStorage.batchSetItem({\r\n    bd_userInfo: userInfo,\r\n    bd_authorization: data.auth.accessToken,\r\n  });\r\n\r\n  // 记住密码逻辑\r\n  if (paramsData.keepLogin) {\r\n    LocalStorage.setItem(\"bd_loginForm\", formData);\r\n  } else {\r\n    LocalStorage.removeItem(\"bd_loginForm\");\r\n  }\r\n  return { state: true, data };\r\n};\r\n\r\n// 登录后获取操作记录\r\nconst handleLoginRecord = async (flag: boolean) => {\r\n  const params = { flag, userName: formData.telephone };\r\n  return multipleAwait(loginRecordApi.getData(params));\r\n};\r\n\r\n// 登录后用来更新用户信息\r\nconst updateUserInfo = async (userInfo: Record<string, any>) => {\r\n  const { companyCode, companyId, mobile, profileId, realName } = userInfo;\r\n  const params = {\r\n    companyCode,\r\n    companyId,\r\n    mobile,\r\n    profileId,\r\n    userName: realName,\r\n  };\r\n  return updateUserInfoApi.getData(params);\r\n};\r\n\r\n// 获取代理商用户信息\r\nconst getAgentInfo = async () => {\r\n  const { data } = await agentInfoApi.getData();\r\n  const agentInfo = agentInfoApi.handleData(data);\r\n  LocalStorage.setItem(\"bd_agentInfo\", agentInfo);\r\n};\r\n\r\n// 代理商的资格认证状态\r\nconst getCertificationStatus = async () => {\r\n  const { data } = await certificationStatusApi.getData();\r\n  const redirectPath = routeQuery.value.redirect;\r\n\r\n  if (!testPassword(formData.password)) {\r\n    await goPage(\"/modifyPassword\");\r\n  } else {\r\n    ElMessage.success(\"登录成功\");\r\n    LocalStorage.batchSetItem({\r\n      bd_agentId: data?.id,\r\n      bd_checkAdvice: data?.checkAdvice,\r\n      bd_checkStatus: data?.checkStatus,\r\n      bd_virCompanyId: data?.virCompanyId,\r\n      bd_existCallInterface: data?.existCallInterface,\r\n    });\r\n\r\n    if (data?.checkStatus === 2) {\r\n      await goPage(redirectPath || \"/home\");\r\n    } else {\r\n      await goPage(redirectPath || `/certificationService`);\r\n    }\r\n  }\r\n};\r\n\r\n// 切换密码框type\r\nconst changeType = () => {\r\n  if (paramsData.passwordType === \"password\") {\r\n    paramsData.passwordType = \"text\";\r\n  } else {\r\n    paramsData.passwordType = \"password\";\r\n  }\r\n};\r\n// 从缓存获取登录账号和密码\r\nif (loginForm) {\r\n  paramsData.keepLogin = true;\r\n  formData.password = loginForm.password;\r\n  formData.telephone = loginForm.telephone;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(HeaderComponent, { pageName: \"login\" }),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[5] || (_cache[5] = _createElementVNode(\"h6\", null, \"用户登录\", -1)),\n      _createVNode(_component_el_form, {\n        ref_key: \"formRef\",\n        ref: formRef,\n        model: _unref(formData),\n        rules: rules\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_form_item, { prop: \"telephone\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: _unref(formData).telephone,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_unref(formData).telephone) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"手机号\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, {\n            prop: \"password\",\n            class: \"password-item\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: _unref(formData).password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(formData).password) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"密码\",\n                type: _unref(paramsData).passwordType\n              }, null, 8, [\"modelValue\", \"type\"]),\n              (_openBlock(), _createElementBlock(\"svg\", {\n                class: \"icon\",\n                \"aria-hidden\": \"true\",\n                onClick: changeType\n              }, [\n                _createElementVNode(\"use\", {\n                  \"xlink:href\": \r\n                _unref(paramsData).passwordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \n                }, null, 8, _hoisted_3)\n              ])),\n              (_unref(paramsData).lockPrompt)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_unref(paramsData).lockPrompt), 1))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, { class: \"keep-forget-item\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_checkbox, {\n                modelValue: _unref(paramsData).keepLogin,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_unref(paramsData).keepLogin) = $event)),\n                label: \"保持登录\"\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"span\", {\n                class: \"forget-password\",\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (_unref(goPage)('/forgetPassword')))\n              }, \"忘记密码?\")\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, { class: \"button-group-item\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", {\n                class: \"submit-button\",\n                onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_unref(submit) && _unref(submit)(...args)))\n              }, \"登录\")\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"model\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_unref(storeState).copyright), 1),\n    _cache[6] || (_cache[6] = _createElementVNode(\"div\", { id: \"test\" }, null, -1))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"login\">\r\n    <HeaderComponent pageName=\"login\"></HeaderComponent>\r\n    <div class=\"container\">\r\n      <h6>用户登录</h6>\r\n      <el-form ref=\"formRef\" :model=\"formData\" :rules=\"rules\">\r\n        <el-form-item prop=\"telephone\">\r\n          <el-input\r\n            v-model.trim=\"formData.telephone\"\r\n            placeholder=\"手机号\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\" class=\"password-item\">\r\n          <el-input\r\n            v-model.trim=\"formData.password\"\r\n            placeholder=\"密码\"\r\n            :type=\"paramsData.passwordType\"\r\n          ></el-input>\r\n          <svg class=\"icon\" aria-hidden=\"true\" @click=\"changeType\">\r\n            <use\r\n              :xlink:href=\"\r\n                paramsData.passwordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \"\r\n            ></use>\r\n          </svg>\r\n          <p class=\"prompt\" v-if=\"paramsData.lockPrompt\">\r\n            {{ paramsData.lockPrompt }}\r\n          </p>\r\n        </el-form-item>\r\n        <el-form-item class=\"keep-forget-item\">\r\n          <el-checkbox\r\n            v-model=\"paramsData.keepLogin\"\r\n            label=\"保持登录\"\r\n          ></el-checkbox>\r\n          <span class=\"forget-password\" @click=\"goPage('/forgetPassword')\"\r\n            >忘记密码?</span\r\n          >\r\n        </el-form-item>\r\n        <el-form-item class=\"button-group-item\">\r\n          <div class=\"submit-button\" @click=\"submit\">登录</div>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"copyright\">{{ storeState.copyright }}</div>\r\n    <div id=\"test\"></div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ElMessage } from \"element-plus\";\r\nimport { ref, shallowReactive } from \"vue\";\r\nimport { multipleAwait } from \"@assets/common\";\r\nimport { testPassword, LocalStorage } from \"jz-tool-lib\";\r\nimport { checkoutTelephone } from \"@assets/validatorHook\";\r\nimport { useVueRouter, useVueStore } from \"@assets/useHook\";\r\n\r\nimport { certificationStatusApi } from \"@api/common-api\";\r\nimport {\r\n  loginApi,\r\n  loginVerifyApi,\r\n  loginRecordApi,\r\n  updateUserInfoApi,\r\n} from \"@api/login-register-api\";\r\nimport HeaderComponent from \"@components/login-regietr/header-component.vue\";\r\nimport { agentInfoApi } from \"@api/personal-center-api\";\r\n\r\ndefineOptions({\r\n  name: \"login\",\r\n});\r\nconst formRef = ref();\r\nconst { storeState } = useVueStore();\r\nconst { routeQuery, goPage } = useVueRouter();\r\nconst loginForm = LocalStorage.getItem(\"bd_loginForm\");\r\n\r\nconst paramsData = shallowReactive({\r\n  keepLogin: false,\r\n  lockPrompt: \"\",\r\n  passwordType: \"password\",\r\n});\r\nconst formData = shallowReactive({\r\n  telephone: \"\",\r\n  password: \"\",\r\n});\r\n\r\n// 校验规则\r\nconst rules = {\r\n  telephone: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        checkoutTelephone(rule, value, callback);\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      required: true,\r\n      message: \"请输入密码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 登录验证\r\nconst submit = _.throttle(\r\n  async () => {\r\n    try {\r\n      const valid = await formRef.value.validate();\r\n      if (!valid) return;\r\n\r\n      // 校验账号是否锁定\r\n      const verifyResult = await handleLoginVerify();\r\n      if (!verifyResult.state) {\r\n        if (verifyResult.data) paramsData.lockPrompt = verifyResult.data.msg;\r\n        return;\r\n      }\r\n\r\n      // 登录\r\n      const loginResult = await handleLogin();\r\n      if (!loginResult.state) {\r\n        if (loginResult.data && loginResult.data.rspCode === 1) {\r\n          const recordResult = await handleLoginRecord(false);\r\n          if (recordResult.data && recordResult.data.statusCode === 1) {\r\n            paramsData.lockPrompt = recordResult.data.msg;\r\n          }\r\n        }\r\n        return;\r\n      }\r\n\r\n      // 登录成功后的操作\r\n      await handleLoginRecord(true);\r\n      await updateUserInfo(loginResult.data.userInfo);\r\n      await getAgentInfo();\r\n      await getCertificationStatus();\r\n    } catch (error) {\r\n      console.error(\"登录失败:\", error);\r\n    }\r\n  },\r\n  3000,\r\n  { leading: true, trailing: false }\r\n);\r\n\r\n// 登录前校验账号是否锁定\r\nconst handleLoginVerify = async () => {\r\n  paramsData.lockPrompt = \"\";\r\n  return multipleAwait(loginVerifyApi.getData(formData.telephone));\r\n};\r\n\r\n// 登录\r\nconst handleLogin = async () => {\r\n  const params = {\r\n    auto: 0,\r\n    terminaltype: \"WEB\",\r\n    passWord: formData.password,\r\n    userName: formData.telephone,\r\n  };\r\n  const { data } = await loginApi.getData(params);\r\n  const userInfo = { ...data?.userInfo, companyId: data.companyId };\r\n  LocalStorage.batchSetItem({\r\n    bd_userInfo: userInfo,\r\n    bd_authorization: data.auth.accessToken,\r\n  });\r\n\r\n  // 记住密码逻辑\r\n  if (paramsData.keepLogin) {\r\n    LocalStorage.setItem(\"bd_loginForm\", formData);\r\n  } else {\r\n    LocalStorage.removeItem(\"bd_loginForm\");\r\n  }\r\n  return { state: true, data };\r\n};\r\n\r\n// 登录后获取操作记录\r\nconst handleLoginRecord = async (flag: boolean) => {\r\n  const params = { flag, userName: formData.telephone };\r\n  return multipleAwait(loginRecordApi.getData(params));\r\n};\r\n\r\n// 登录后用来更新用户信息\r\nconst updateUserInfo = async (userInfo: Record<string, any>) => {\r\n  const { companyCode, companyId, mobile, profileId, realName } = userInfo;\r\n  const params = {\r\n    companyCode,\r\n    companyId,\r\n    mobile,\r\n    profileId,\r\n    userName: realName,\r\n  };\r\n  return updateUserInfoApi.getData(params);\r\n};\r\n\r\n// 获取代理商用户信息\r\nconst getAgentInfo = async () => {\r\n  const { data } = await agentInfoApi.getData();\r\n  const agentInfo = agentInfoApi.handleData(data);\r\n  LocalStorage.setItem(\"bd_agentInfo\", agentInfo);\r\n};\r\n\r\n// 代理商的资格认证状态\r\nconst getCertificationStatus = async () => {\r\n  const { data } = await certificationStatusApi.getData();\r\n  const redirectPath = routeQuery.value.redirect;\r\n\r\n  if (!testPassword(formData.password)) {\r\n    await goPage(\"/modifyPassword\");\r\n  } else {\r\n    ElMessage.success(\"登录成功\");\r\n    LocalStorage.batchSetItem({\r\n      bd_agentId: data?.id,\r\n      bd_checkAdvice: data?.checkAdvice,\r\n      bd_checkStatus: data?.checkStatus,\r\n      bd_virCompanyId: data?.virCompanyId,\r\n      bd_existCallInterface: data?.existCallInterface,\r\n    });\r\n\r\n    if (data?.checkStatus === 2) {\r\n      await goPage(redirectPath || \"/home\");\r\n    } else {\r\n      await goPage(redirectPath || `/certificationService`);\r\n    }\r\n  }\r\n};\r\n\r\n// 切换密码框type\r\nconst changeType = () => {\r\n  if (paramsData.passwordType === \"password\") {\r\n    paramsData.passwordType = \"text\";\r\n  } else {\r\n    paramsData.passwordType = \"password\";\r\n  }\r\n};\r\n// 从缓存获取登录账号和密码\r\nif (loginForm) {\r\n  paramsData.keepLogin = true;\r\n  formData.password = loginForm.password;\r\n  formData.telephone = loginForm.telephone;\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background: #f5f7fb;\r\n}\r\n\r\n.container {\r\n  width: 520px;\r\n  min-height: 488px;\r\n  padding: 48px;\r\n  z-index: 1;\r\n  background: #ffffff;\r\n  box-shadow: 0 10px 50px 0 rgba(100, 107, 122, 0.1);\r\n  border-radius: 8px;\r\n\r\n  > h6 {\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #242934;\r\n    line-height: 28px;\r\n    text-align: center;\r\n    margin-bottom: 58px;\r\n  }\r\n}\r\n\r\n:deep(.el-form) {\r\n  .el-form-item {\r\n    margin-bottom: 32px;\r\n\r\n    .el-input__wrapper {\r\n      height: 58px;\r\n      padding: 15px 24px;\r\n      border-radius: 4px;\r\n      background: #f5f7fb;\r\n      box-shadow: none;\r\n\r\n      &.is-focus {\r\n        border: 1px solid #0056ff;\r\n      }\r\n    }\r\n\r\n    .el-input__inner {\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n      color: #242934;\r\n\r\n      &::placeholder {\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        color: #9ca6b9;\r\n      }\r\n    }\r\n\r\n    &.is-error {\r\n      .el-input__wrapper {\r\n        background: rgba(241, 37, 37, 0.05);\r\n\r\n        &::placeholder {\r\n          color: #f12525;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .password-item {\r\n    .el-form-item__content {\r\n      position: relative;\r\n    }\r\n\r\n    .el-input__wrapper {\r\n      padding-right: 56px;\r\n    }\r\n\r\n    .icon {\r\n      position: absolute;\r\n      top: 17px;\r\n      right: 16px;\r\n      width: 24px;\r\n      height: 24px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .prompt {\r\n      height: 32px;\r\n      margin-top: 10px;\r\n      line-height: 16px;\r\n      color: #f12525;\r\n    }\r\n  }\r\n\r\n  .keep-forget-item {\r\n    margin: 28px 0 48px;\r\n\r\n    .el-form-item__content {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      color: #646b7a;\r\n      font-size: 14px;\r\n      line-height: 1;\r\n    }\r\n\r\n    .forget-password {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .button-group-item {\r\n    margin-bottom: 0;\r\n\r\n    .submit-button {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 100%;\r\n      height: 60px;\r\n      cursor: pointer;\r\n      font-size: 18px;\r\n      font-weight: 500;\r\n      color: #ffffff;\r\n      line-height: 25px;\r\n      background: #0056ff;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n}\r\n\r\n.copyright {\r\n  position: absolute;\r\n  bottom: 80px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #9ca6b9;\r\n  line-height: 14px;\r\n  text-align: center;\r\n}\r\n</style>\r\n","import script from \"./login.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./login.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./login.vue?vue&type=style&index=0&id=62886424&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-62886424\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_defineComponent","name","__name","setup","__props","formRef","ref","storeState","useVueStore","routeQuery","goPage","useVueRouter","loginForm","LocalStorage","getItem","paramsData","shallowReactive","keepLogin","lockPrompt","passwordType","formData","telephone","password","rules","validator","rule","value","callback","checkoutTelephone","trigger","required","message","submit","_","throttle","async","valid","validate","verifyResult","handleLoginVerify","state","data","msg","loginResult","handleLogin","rspCode","recordResult","handleLoginRecord","statusCode","updateUserInfo","userInfo","getAgentInfo","getCertificationStatus","error","console","leading","trailing","multipleAwait","loginVerifyApi","getData","params","auto","terminaltype","passWord","userName","loginApi","companyId","batchSetItem","bd_userInfo","bd_authorization","auth","accessToken","setItem","removeItem","flag","loginRecordApi","companyCode","mobile","profileId","realName","updateUserInfoApi","agentInfoApi","agentInfo","handleData","certificationStatusApi","redirectPath","redirect","testPassword","ElMessage","success","bd_agentId","id","bd_checkAdvice","checkAdvice","bd_checkStatus","checkStatus","bd_virCompanyId","virCompanyId","bd_existCallInterface","existCallInterface","changeType","_ctx","_cache","_component_el_input","_resolveComponent","_component_el_form_item","_component_el_checkbox","_component_el_form","_openBlock","_createElementBlock","_createVNode","HeaderComponent","pageName","_createElementVNode","ref_key","model","_unref","default","_withCtx","prop","modelValue","$event","modelModifiers","trim","placeholder","type","onClick","_toDisplayString","_createCommentVNode","label","args","copyright","__exports__"],"sourceRoot":""}