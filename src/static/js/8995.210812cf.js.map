{"version":3,"file":"static/js/8995.210812cf.js","mappings":"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","sources":["webpack://daili/./src/views/forget-password.vue?0efe","webpack://daili/./src/views/forget-password.vue","webpack://daili/./src/views/forget-password.vue?58d2"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"forget-password\" }\nconst _hoisted_2 = { class: \"container\" }\nconst _hoisted_3 = [\"src\"]\nconst _hoisted_4 = { class: \"telephone-code\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"count\"\n}\nconst _hoisted_6 = [\"xlink:href\"]\nconst _hoisted_7 = [\"xlink:href\"]\nconst _hoisted_8 = { class: \"copyright\" }\n\nimport { ElMessage } from \"element-plus\";\r\nimport { ref, reactive, onUnmounted } from \"vue\";\r\n\r\nimport { testTelephone, LocalStorage } from \"jz-tool-lib\";\r\nimport { useVueRouter, useVueStore } from \"@assets/useHook\";\r\nimport {\r\n  checkoutTelephone,\r\n  validatePassword,\r\n  validateRePassword,\r\n} from \"@assets/validatorHook\";\r\n\r\nimport {\r\n  forgetPasswordApi,\r\n  imgCodeApi,\r\n  forgetTelephoneCodeApi,\r\n  testTelephoneCodeApi,\r\n} from \"@api/login-register-api\";\r\n\r\nimport HeaderComponent from \"@components/login-regietr/header-component.vue\";\r\n\nexport default /*@__PURE__*/_defineComponent({\n  ...{\r\n  name: \"forgetPassword\",\r\n},\n  __name: 'forget-password',\n  setup(__props) {\n\r\nconst formRef = ref();\r\nconst ruleFormRef = ref();\r\nconst { goPage } = useVueRouter();\r\nconst { storeState } = useVueStore();\r\n\r\nconst rules = {\r\n  mobile: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        checkoutTelephone(rule, value, callback);\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  imgCode: [\r\n    {\r\n      required: true,\r\n      message: \"请输入右侧验证码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  telephoneCode: [\r\n    {\r\n      required: true,\r\n      message: \"请输入4位验证码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        validatePassword(\r\n          rule,\r\n          value,\r\n          callback,\r\n          ruleFormData,\r\n          ruleFormRef,\r\n          \"rePassword\"\r\n        );\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  rePassword: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        validateRePassword(rule, value, callback, ruleFormData, \"password\");\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n};\r\nconst paramsData = reactive({\r\n  step: 1,\r\n  telephoneCodeObj: {\r\n    flag: true,\r\n    timer: 0,\r\n    count: 60,\r\n  },\r\n  imgCodeUrl: imgCodeApi(),\r\n  telephoneCodeFlag: false,\r\n  submitFlag: false,\r\n  passwordType: \"password\",\r\n  rePasswordType: \"password\",\r\n});\r\nconst formData = reactive({\r\n  mobile: \"\",\r\n  imgCode: \"\",\r\n  telephoneCode: \"\",\r\n});\r\nconst ruleFormData = reactive({\r\n  realName: \"\",\r\n  password: \"\",\r\n  rePassword: \"\",\r\n});\r\n// 获取图片验证码\r\nconst getImgCode = () => {\r\n  paramsData.imgCodeUrl = imgCodeApi() + \"?t=\" + new Date().getTime();\r\n};\r\n\r\n// 获取短信验证码\r\nconst getTelephoneCode = () => {\r\n  if (paramsData.telephoneCodeFlag) return;\r\n  paramsData.telephoneCodeFlag = true;\r\n  if (!formData.mobile) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入手机号\");\r\n    return;\r\n  }\r\n  if (!testTelephone(formData.mobile)) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入正确的手机号码\");\r\n    return;\r\n  }\r\n  if (!formData.imgCode) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入图形验证码\");\r\n    return;\r\n  }\r\n  let params = {\r\n    mobile: formData.mobile,\r\n    code: formData.imgCode,\r\n  };\r\n  forgetTelephoneCodeApi(params)\r\n    .then(() => {\r\n      ElMessage.success(\"短信发送成功\");\r\n      paramsData.telephoneCodeFlag = false;\r\n      telephoneCodeInterval();\r\n    })\r\n    .catch(() => {\r\n      paramsData.telephoneCodeFlag = false;\r\n      paramsData.imgCodeUrl = imgCodeApi() + \"?t=\" + new Date().getTime();\r\n    });\r\n};\r\n// 短信验证码倒计时\r\nconst telephoneCodeInterval = () => {\r\n  paramsData.telephoneCodeObj.timer = setInterval(() => {\r\n    if (paramsData.telephoneCodeObj.count === 0) {\r\n      clearInterval(paramsData.telephoneCodeObj.timer);\r\n      paramsData.telephoneCodeObj.flag = true;\r\n      paramsData.telephoneCodeObj.count = 60;\r\n    } else {\r\n      paramsData.telephoneCodeObj.flag = false;\r\n      paramsData.telephoneCodeObj.count -= 1;\r\n    }\r\n  }, 1000);\r\n};\r\n// 下一步\r\nconst nextCLick = () => {\r\n  formRef.value.validate((valid: boolean) => {\r\n    if (valid) {\r\n      let params = {\r\n        mobile: formData.mobile,\r\n        checkCode: formData.telephoneCode,\r\n      };\r\n      testTelephoneCodeApi(params).then(() => {\r\n        paramsData.step = 2;\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\nconst submit = () => {\r\n  ruleFormRef.value.validate((valid: boolean) => {\r\n    if (valid) {\r\n      if (paramsData.submitFlag) return;\r\n      paramsData.submitFlag = true;\r\n      let params = {\r\n        mobile: formData.mobile,\r\n        password: ruleFormData.password,\r\n        yanzheng: formData.telephoneCode,\r\n      };\r\n      forgetPasswordApi(params)\r\n        .then(() => {\r\n          const loginForm = {\r\n            telephone: formData.mobile,\r\n            passWord: ruleFormData.password,\r\n          };\r\n          LocalStorage.setItem(\"bd_loginForm\", loginForm);\r\n          goPage(\"/login\");\r\n          paramsData.submitFlag = false;\r\n          ElMessage.success(\"重置成功\");\r\n        })\r\n        .catch(() => {\r\n          paramsData.submitFlag = false;\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\n// 切换密码框type\r\nconst handlePasswordType = (type, data) => {\r\n  data[type] = data[type] === \"text\" ? \"password\" : \"text\";\r\n};\r\nonUnmounted(() => {\r\n  clearInterval(paramsData.telephoneCodeObj.timer);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(HeaderComponent, { pageName: \"register\" }),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h6\", null, _toDisplayString(paramsData.step === 1 ? \"忘记密码\" : \"重置密码\"), 1),\n      _withDirectives(_createVNode(_component_el_form, {\n        ref_key: \"formRef\",\n        ref: formRef,\n        model: formData,\n        rules: rules\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_form_item, { prop: \"mobile\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: formData.mobile,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((formData.mobile) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"手机号\"\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, {\n            prop: \"imgCode\",\n            class: \"image-verification\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: formData.imgCode,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((formData.imgCode) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"请输入右侧验证码\"\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"div\", {\n                class: \"img-code\",\n                onClick: getImgCode\n              }, [\n                _createElementVNode(\"img\", {\n                  src: paramsData.imgCodeUrl,\n                  alt: \"\"\n                }, null, 8, _hoisted_3)\n              ])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, {\n            prop: \"telephoneCode\",\n            class: \"telephone-verification\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: formData.telephoneCode,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((formData.telephoneCode) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"请输入4位验证码\"\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"div\", _hoisted_4, [\n                (!paramsData.telephoneCodeObj.flag)\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(paramsData.telephoneCodeObj.count) + \"s\", 1))\n                  : (_openBlock(), _createElementBlock(\"span\", {\n                      key: 1,\n                      class: \"word\",\n                      onClick: getTelephoneCode\n                    }, \"获取验证码\"))\n              ])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", {\n                class: \"submit-button\",\n                onClick: nextCLick\n              }, \"下一步\")\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"model\"]), [\n        [_vShow, paramsData.step === 1]\n      ]),\n      _withDirectives(_createVNode(_component_el_form, {\n        ref_key: \"ruleFormRef\",\n        ref: ruleFormRef,\n        model: ruleFormData,\n        rules: rules\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_form_item, {\n            prop: \"password\",\n            class: \"password-item\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: ruleFormData.password,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((ruleFormData.password) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"请设置新密码\",\n                type: paramsData.passwordType\n              }, null, 8, [\"modelValue\", \"type\"]),\n              (_openBlock(), _createElementBlock(\"svg\", {\n                class: \"icon\",\n                \"aria-hidden\": \"true\",\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (handlePasswordType('passwordType', paramsData)))\n              }, [\n                _createElementVNode(\"use\", {\n                  \"xlink:href\": \r\n                paramsData.passwordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \n                }, null, 8, _hoisted_6)\n              ]))\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, {\n            prop: \"rePassword\",\n            class: \"password-item\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: ruleFormData.rePassword,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((ruleFormData.rePassword) = $event)),\n                modelModifiers: { trim: true },\n                placeholder: \"再次输入密码\",\n                type: paramsData.rePasswordType\n              }, null, 8, [\"modelValue\", \"type\"]),\n              (_openBlock(), _createElementBlock(\"svg\", {\n                class: \"icon\",\n                \"aria-hidden\": \"true\",\n                onClick: _cache[6] || (_cache[6] = ($event: any) => (handlePasswordType('rePasswordType', paramsData)))\n              }, [\n                _createElementVNode(\"use\", {\n                  \"xlink:href\": \r\n                paramsData.rePasswordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \n                }, null, 8, _hoisted_7)\n              ]))\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", {\n                class: \"submit-button\",\n                onClick: submit\n              }, \"确认\")\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"model\"]), [\n        [_vShow, paramsData.step === 2]\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, _toDisplayString(_unref(storeState).copyright), 1)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"forget-password\">\r\n    <HeaderComponent pageName=\"register\"></HeaderComponent>\r\n    <div class=\"container\">\r\n      <h6>{{ paramsData.step === 1 ? \"忘记密码\" : \"重置密码\" }}</h6>\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"formData\"\r\n        :rules=\"rules\"\r\n        v-show=\"paramsData.step === 1\"\r\n      >\r\n        <el-form-item prop=\"mobile\">\r\n          <el-input\r\n            v-model.trim=\"formData.mobile\"\r\n            placeholder=\"手机号\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"imgCode\" class=\"image-verification\">\r\n          <el-input\r\n            v-model.trim=\"formData.imgCode\"\r\n            placeholder=\"请输入右侧验证码\"\r\n          ></el-input>\r\n          <div class=\"img-code\" @click=\"getImgCode\">\r\n            <img :src=\"paramsData.imgCodeUrl\" alt=\"\" />\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item prop=\"telephoneCode\" class=\"telephone-verification\">\r\n          <el-input\r\n            v-model.trim=\"formData.telephoneCode\"\r\n            placeholder=\"请输入4位验证码\"\r\n          ></el-input>\r\n          <div class=\"telephone-code\">\r\n            <span class=\"count\" v-if=\"!paramsData.telephoneCodeObj.flag\"\r\n              >{{ paramsData.telephoneCodeObj.count }}s</span\r\n            >\r\n            <span class=\"word\" v-else @click=\"getTelephoneCode\"\r\n              >获取验证码</span\r\n            >\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <div class=\"submit-button\" @click=\"nextCLick\">下一步</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-form\r\n        ref=\"ruleFormRef\"\r\n        :model=\"ruleFormData\"\r\n        :rules=\"rules\"\r\n        v-show=\"paramsData.step === 2\"\r\n      >\r\n        <el-form-item prop=\"password\" class=\"password-item\">\r\n          <el-input\r\n            v-model.trim=\"ruleFormData.password\"\r\n            placeholder=\"请设置新密码\"\r\n            :type=\"paramsData.passwordType\"\r\n          ></el-input>\r\n          <svg\r\n            class=\"icon\"\r\n            aria-hidden=\"true\"\r\n            @click=\"handlePasswordType('passwordType', paramsData)\"\r\n          >\r\n            <use\r\n              :xlink:href=\"\r\n                paramsData.passwordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \"\r\n            ></use>\r\n          </svg>\r\n        </el-form-item>\r\n        <el-form-item prop=\"rePassword\" class=\"password-item\">\r\n          <el-input\r\n            v-model.trim=\"ruleFormData.rePassword\"\r\n            placeholder=\"再次输入密码\"\r\n            :type=\"paramsData.rePasswordType\"\r\n          ></el-input>\r\n          <svg\r\n            class=\"icon\"\r\n            aria-hidden=\"true\"\r\n            @click=\"handlePasswordType('rePasswordType', paramsData)\"\r\n          >\r\n            <use\r\n              :xlink:href=\"\r\n                paramsData.rePasswordType === 'password'\r\n                  ? '#icon-password-hide'\r\n                  : '#icon-password-show'\r\n              \"\r\n            ></use>\r\n          </svg>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <div class=\"submit-button\" @click=\"submit\">确认</div>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"copyright\">{{ storeState.copyright }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ElMessage } from \"element-plus\";\r\nimport { ref, reactive, onUnmounted } from \"vue\";\r\n\r\nimport { testTelephone, LocalStorage } from \"jz-tool-lib\";\r\nimport { useVueRouter, useVueStore } from \"@assets/useHook\";\r\nimport {\r\n  checkoutTelephone,\r\n  validatePassword,\r\n  validateRePassword,\r\n} from \"@assets/validatorHook\";\r\n\r\nimport {\r\n  forgetPasswordApi,\r\n  imgCodeApi,\r\n  forgetTelephoneCodeApi,\r\n  testTelephoneCodeApi,\r\n} from \"@api/login-register-api\";\r\n\r\nimport HeaderComponent from \"@components/login-regietr/header-component.vue\";\r\nconst formRef = ref();\r\nconst ruleFormRef = ref();\r\nconst { goPage } = useVueRouter();\r\nconst { storeState } = useVueStore();\r\ndefineOptions({\r\n  name: \"forgetPassword\",\r\n});\r\nconst rules = {\r\n  mobile: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        checkoutTelephone(rule, value, callback);\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  imgCode: [\r\n    {\r\n      required: true,\r\n      message: \"请输入右侧验证码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  telephoneCode: [\r\n    {\r\n      required: true,\r\n      message: \"请输入4位验证码\",\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        validatePassword(\r\n          rule,\r\n          value,\r\n          callback,\r\n          ruleFormData,\r\n          ruleFormRef,\r\n          \"rePassword\"\r\n        );\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n  rePassword: [\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        validateRePassword(rule, value, callback, ruleFormData, \"password\");\r\n      },\r\n      trigger: \"blur\",\r\n    },\r\n  ],\r\n};\r\nconst paramsData = reactive({\r\n  step: 1,\r\n  telephoneCodeObj: {\r\n    flag: true,\r\n    timer: 0,\r\n    count: 60,\r\n  },\r\n  imgCodeUrl: imgCodeApi(),\r\n  telephoneCodeFlag: false,\r\n  submitFlag: false,\r\n  passwordType: \"password\",\r\n  rePasswordType: \"password\",\r\n});\r\nconst formData = reactive({\r\n  mobile: \"\",\r\n  imgCode: \"\",\r\n  telephoneCode: \"\",\r\n});\r\nconst ruleFormData = reactive({\r\n  realName: \"\",\r\n  password: \"\",\r\n  rePassword: \"\",\r\n});\r\n// 获取图片验证码\r\nconst getImgCode = () => {\r\n  paramsData.imgCodeUrl = imgCodeApi() + \"?t=\" + new Date().getTime();\r\n};\r\n\r\n// 获取短信验证码\r\nconst getTelephoneCode = () => {\r\n  if (paramsData.telephoneCodeFlag) return;\r\n  paramsData.telephoneCodeFlag = true;\r\n  if (!formData.mobile) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入手机号\");\r\n    return;\r\n  }\r\n  if (!testTelephone(formData.mobile)) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入正确的手机号码\");\r\n    return;\r\n  }\r\n  if (!formData.imgCode) {\r\n    paramsData.telephoneCodeFlag = false;\r\n    ElMessage.error(\"请输入图形验证码\");\r\n    return;\r\n  }\r\n  let params = {\r\n    mobile: formData.mobile,\r\n    code: formData.imgCode,\r\n  };\r\n  forgetTelephoneCodeApi(params)\r\n    .then(() => {\r\n      ElMessage.success(\"短信发送成功\");\r\n      paramsData.telephoneCodeFlag = false;\r\n      telephoneCodeInterval();\r\n    })\r\n    .catch(() => {\r\n      paramsData.telephoneCodeFlag = false;\r\n      paramsData.imgCodeUrl = imgCodeApi() + \"?t=\" + new Date().getTime();\r\n    });\r\n};\r\n// 短信验证码倒计时\r\nconst telephoneCodeInterval = () => {\r\n  paramsData.telephoneCodeObj.timer = setInterval(() => {\r\n    if (paramsData.telephoneCodeObj.count === 0) {\r\n      clearInterval(paramsData.telephoneCodeObj.timer);\r\n      paramsData.telephoneCodeObj.flag = true;\r\n      paramsData.telephoneCodeObj.count = 60;\r\n    } else {\r\n      paramsData.telephoneCodeObj.flag = false;\r\n      paramsData.telephoneCodeObj.count -= 1;\r\n    }\r\n  }, 1000);\r\n};\r\n// 下一步\r\nconst nextCLick = () => {\r\n  formRef.value.validate((valid: boolean) => {\r\n    if (valid) {\r\n      let params = {\r\n        mobile: formData.mobile,\r\n        checkCode: formData.telephoneCode,\r\n      };\r\n      testTelephoneCodeApi(params).then(() => {\r\n        paramsData.step = 2;\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\nconst submit = () => {\r\n  ruleFormRef.value.validate((valid: boolean) => {\r\n    if (valid) {\r\n      if (paramsData.submitFlag) return;\r\n      paramsData.submitFlag = true;\r\n      let params = {\r\n        mobile: formData.mobile,\r\n        password: ruleFormData.password,\r\n        yanzheng: formData.telephoneCode,\r\n      };\r\n      forgetPasswordApi(params)\r\n        .then(() => {\r\n          const loginForm = {\r\n            telephone: formData.mobile,\r\n            passWord: ruleFormData.password,\r\n          };\r\n          LocalStorage.setItem(\"bd_loginForm\", loginForm);\r\n          goPage(\"/login\");\r\n          paramsData.submitFlag = false;\r\n          ElMessage.success(\"重置成功\");\r\n        })\r\n        .catch(() => {\r\n          paramsData.submitFlag = false;\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\n// 切换密码框type\r\nconst handlePasswordType = (type, data) => {\r\n  data[type] = data[type] === \"text\" ? \"password\" : \"text\";\r\n};\r\nonUnmounted(() => {\r\n  clearInterval(paramsData.telephoneCodeObj.timer);\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.forget-password {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background: #f5f7fb;\r\n\r\n  .container {\r\n    width: 520px;\r\n    padding: 48px 48px 40px;\r\n    z-index: 1;\r\n    background: #ffffff;\r\n    box-shadow: 0 10px 50px 0 rgba(100, 107, 122, 0.1);\r\n    border-radius: 8px;\r\n\r\n    h6 {\r\n      font-size: 28px;\r\n      font-weight: 600;\r\n      color: #242934;\r\n      line-height: 28px;\r\n      text-align: center;\r\n      margin-bottom: 58px;\r\n    }\r\n\r\n    :deep(.el-form) {\r\n      .el-form-item {\r\n        margin-bottom: 32px;\r\n        .el-input__wrapper {\r\n          height: 58px;\r\n          padding: 15px 24px;\r\n          border-radius: 4px;\r\n          background: #f5f7fb;\r\n          box-shadow: none;\r\n          &.is-focus {\r\n            border: 1px solid #0056ff;\r\n          }\r\n        }\r\n        .el-input__inner {\r\n          font-size: 20px;\r\n          font-weight: 600;\r\n          color: #242934;\r\n\r\n          &::placeholder {\r\n            font-size: 16px;\r\n            font-weight: 400;\r\n            color: #9ca6b9;\r\n          }\r\n        }\r\n\r\n        &.is-error {\r\n          .el-input__wrapper {\r\n            background: rgba(241, 37, 37, 0.05);\r\n\r\n            &::placeholder {\r\n              color: #f12525;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .password-item {\r\n        .el-form-item__content {\r\n          position: relative;\r\n        }\r\n        .el-input__wrapper {\r\n          padding-right: 56px;\r\n        }\r\n\r\n        .icon {\r\n          position: absolute;\r\n          top: 17px;\r\n          right: 16px;\r\n          width: 24px;\r\n          height: 24px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .prompt {\r\n          height: 32px;\r\n          margin-top: 10px;\r\n          line-height: 16px;\r\n          color: #f12525;\r\n        }\r\n      }\r\n      .image-verification {\r\n        position: relative;\r\n\r\n        .el-input__inner {\r\n          padding-right: 130px;\r\n        }\r\n\r\n        .img-code {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: absolute;\r\n          top: 11px;\r\n          right: 20px;\r\n          width: 90px;\r\n          height: 36px;\r\n          cursor: pointer;\r\n\r\n          img {\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n        }\r\n      }\r\n\r\n      .telephone-verification {\r\n        position: relative;\r\n\r\n        .el-input__inner {\r\n          padding-right: 130px;\r\n        }\r\n\r\n        .telephone-code {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: absolute;\r\n          top: 11px;\r\n          right: 20px;\r\n          width: 90px;\r\n          height: 36px;\r\n          font-size: 16px;\r\n          color: #0056ff;\r\n          cursor: pointer;\r\n\r\n          span {\r\n            height: 100%;\r\n          }\r\n        }\r\n      }\r\n\r\n      .reading-agreement {\r\n        margin: 28px 0 48px;\r\n\r\n        .el-form-item__content {\r\n          display: flex;\r\n          align-items: center;\r\n          font-size: 14px;\r\n          color: #9ca6b9;\r\n          line-height: 14px;\r\n\r\n          p {\r\n            margin-left: 5px;\r\n\r\n            span {\r\n              color: #646b7a;\r\n              margin: 0 5px;\r\n            }\r\n          }\r\n\r\n          .el-checkbox {\r\n            height: 16px;\r\n\r\n            .el-checkbox__input {\r\n              .el-checkbox__inner {\r\n                width: 16px;\r\n                height: 16px;\r\n\r\n                &::after {\r\n                  height: 9px;\r\n                  left: 5px;\r\n                }\r\n              }\r\n\r\n              &.is-checked {\r\n                + .el-checkbox__label {\r\n                  color: #0056ff;\r\n                }\r\n\r\n                .el-checkbox__inner {\r\n                  background-color: #0056ff;\r\n                  border-color: #0056ff;\r\n                }\r\n              }\r\n\r\n              &.is-focus .el-checkbox__inner {\r\n                border-color: #deedfc;\r\n                width: 16px;\r\n                height: 16px;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .forget-password {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .submit-button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 60px;\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n        line-height: 25px;\r\n        background: #0056ff;\r\n        border-radius: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .copyright {\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    color: #9ca6b9;\r\n    line-height: 1;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./forget-password.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./forget-password.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./forget-password.vue?vue&type=style&index=0&id=3c46bd94&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3c46bd94\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","key","_hoisted_6","_hoisted_7","_hoisted_8","_defineComponent","name","__name","setup","__props","formRef","ref","ruleFormRef","goPage","useVueRouter","storeState","useVueStore","rules","mobile","validator","rule","value","callback","checkoutTelephone","trigger","imgCode","required","message","telephoneCode","password","validatePassword","ruleFormData","rePassword","validateRePassword","paramsData","reactive","step","telephoneCodeObj","flag","timer","count","imgCodeUrl","imgCodeApi","telephoneCodeFlag","submitFlag","passwordType","rePasswordType","formData","realName","getImgCode","Date","getTime","getTelephoneCode","ElMessage","error","testTelephone","params","code","forgetTelephoneCodeApi","then","success","telephoneCodeInterval","catch","setInterval","clearInterval","nextCLick","validate","valid","checkCode","testTelephoneCodeApi","submit","yanzheng","forgetPasswordApi","loginForm","telephone","passWord","LocalStorage","setItem","handlePasswordType","type","data","onUnmounted","_ctx","_cache","_component_el_input","_resolveComponent","_component_el_form_item","_component_el_form","_openBlock","_createElementBlock","_createVNode","HeaderComponent","pageName","_createElementVNode","_toDisplayString","_withDirectives","ref_key","model","default","_withCtx","prop","modelValue","$event","modelModifiers","trim","placeholder","_","onClick","src","alt","_vShow","_unref","copyright","__exports__"],"sourceRoot":""}