{"version":3,"file":"static/js/4305.8f5db7a6.js","mappings":"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","sources":["webpack://daili/./src/components/business-management/ospreyCloudCall/report/detail/speech-library-info.vue?dda0","webpack://daili/./src/components/business-management/ospreyCloudCall/report/detail/speech-library-info.vue","webpack://daili/./src/components/business-management/ospreyCloudCall/report/detail/speech-library-info.vue?4c48"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"speech-info\" }\nconst _hoisted_2 = { class: \"list-container\" }\nconst _hoisted_3 = [\"innerHTML\"]\n\nimport { ref, defineAsyncComponent } from \"vue\";\r\nimport { usePage } from \"jz-tool-lib\";\r\nimport { useVueRouter } from \"@assets/useHook\";\r\n\r\nimport { speechLibraryListApi } from \"@api/business-management-api\";\r\nimport { LocalStorage } from \"jz-tool-lib\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'speech-library-info',\n  setup(__props) {\n\r\nconst SpeechDetailDrawer = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/speech-detail-drawer.vue\"\r\n    )\r\n);\r\nconst { routeQuery } = useVueRouter();\r\nconst { bd_virCompanyId: virCompanyId } = LocalStorage.batchGetItem([\r\n  \"bd_virCompanyId\",\r\n]);\r\nconst speechDetailRef = ref();\r\nconst { pageNumberChange, pageSizeChange, pageData } = usePage({\r\n  listApi: speechLibraryListApi,\r\n  props: {\r\n    pageSize: {\r\n      name: \"pageSize\",\r\n      default: 100,\r\n    },\r\n    pageNumber: {\r\n      name: \"pageNo\",\r\n      default: 1,\r\n    },\r\n  },\r\n  paramsData: {\r\n    companyId: virCompanyId,\r\n    companyCode: routeQuery.value.companyCode,\r\n  },\r\n});\r\nfunction openSpeechDetail(row) {\r\n  speechDetailRef.value.trigger(true, row);\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\")!\n  const _component_el_tag = _resolveComponent(\"el-tag\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_TableEmpty = _resolveComponent(\"TableEmpty\")!\n  const _component_el_table = _resolveComponent(\"el-table\")!\n  const _component_PagePagination = _resolveComponent(\"PagePagination\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"h5\", { class: \"title\" }, \"4. 话术\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_el_table, {\n        data: _unref(pageData).list,\n        height: \"400px\"\n      }, {\n        empty: _withCtx(() => [\n          _createVNode(_component_TableEmpty, { \"empty-text\": \"暂无数据\" })\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_el_table_column, {\n            prop: \"content\",\n            label: \"话术内容\",\n            align: \"left\"\n          }, {\n            default: _withCtx(({ row }) => [\n              _createElementVNode(\"p\", {\n                class: \"speech-column\",\n                innerHTML: row.content\n              }, null, 8, _hoisted_3)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_table_column, {\n            prop: \"createdTime\",\n            label: \"创建时间\",\n            align: \"center\"\n          }),\n          _createVNode(_component_el_table_column, {\n            prop: \"createByName\",\n            label: \"创建人\",\n            align: \"center\"\n          }),\n          _createVNode(_component_el_table_column, {\n            prop: \"statusName\",\n            label: \"审核状态\",\n            width: \"200px\",\n            align: \"center\"\n          }, {\n            default: _withCtx(({ row }) => [\n              _createVNode(_component_el_tag, {\n                type: row.statusStyleType\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(row.statusName), 1)\n                ]),\n                _: 2\n              }, 1032, [\"type\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            align: \"center\",\n            width: \"100\"\n          }, {\n            default: _withCtx(({ row }) => [\n              _createVNode(_component_el_button, {\n                onClick: ($event: any) => (openSpeechDetail(row)),\n                link: \"\",\n                type: \"primary\"\n              }, {\n                default: _withCtx(() => _cache[0] || (_cache[0] = [\n                  _createTextVNode(\"查看\")\n                ])),\n                _: 2\n              }, 1032, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"data\"]),\n      _createVNode(_component_PagePagination, {\n        pageTotal: _unref(pageData).pageTotal,\n        pageSize: _unref(pageData).pageSize,\n        pageNumber: _unref(pageData).pageNumber,\n        onEmitPageSizeChange: _unref(pageSizeChange),\n        onEmitPageNumberChange: _unref(pageNumberChange)\n      }, null, 8, [\"pageTotal\", \"pageSize\", \"pageNumber\", \"onEmitPageSizeChange\", \"onEmitPageNumberChange\"])\n    ]),\n    _createVNode(_unref(SpeechDetailDrawer), {\n      ref_key: \"speechDetailRef\",\n      ref: speechDetailRef\n    }, null, 512)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"speech-info\">\r\n    <h5 class=\"title\">4. 话术</h5>\r\n    <div class=\"list-container\">\r\n      <!--   列表   -->\r\n      <el-table :data=\"pageData.list\" height=\"400px\">\r\n        <el-table-column prop=\"content\" label=\"话术内容\" align=\"left\">\r\n          <template #default=\"{ row }\">\r\n            <p class=\"speech-column\" v-html=\"row.content\"></p>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"createdTime\"\r\n          label=\"创建时间\"\r\n          align=\"center\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"createByName\"\r\n          label=\"创建人\"\r\n          align=\"center\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"statusName\"\r\n          label=\"审核状态\"\r\n          width=\"200px\"\r\n          align=\"center\"\r\n        >\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"row.statusStyleType\">{{ row.statusName }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"100\">\r\n          <template #default=\"{ row }\">\r\n            <el-button @click=\"openSpeechDetail(row)\" link type=\"primary\"\r\n              >查看</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n        <template #empty>\r\n          <TableEmpty empty-text=\"暂无数据\"></TableEmpty>\r\n        </template>\r\n      </el-table>\r\n      <!--   分页   -->\r\n      <PagePagination\r\n        :pageTotal=\"pageData.pageTotal\"\r\n        :pageSize=\"pageData.pageSize\"\r\n        :pageNumber=\"pageData.pageNumber\"\r\n        @emitPageSizeChange=\"pageSizeChange\"\r\n        @emitPageNumberChange=\"pageNumberChange\"\r\n      ></PagePagination>\r\n    </div>\r\n    <SpeechDetailDrawer ref=\"speechDetailRef\"></SpeechDetailDrawer>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, defineAsyncComponent } from \"vue\";\r\nimport { usePage } from \"jz-tool-lib\";\r\nimport { useVueRouter } from \"@assets/useHook\";\r\n\r\nimport { speechLibraryListApi } from \"@api/business-management-api\";\r\nimport { LocalStorage } from \"jz-tool-lib\";\r\n\r\nconst SpeechDetailDrawer = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/report/detail/speech-detail-drawer.vue\"\r\n    )\r\n);\r\nconst { routeQuery } = useVueRouter();\r\nconst { bd_virCompanyId: virCompanyId } = LocalStorage.batchGetItem([\r\n  \"bd_virCompanyId\",\r\n]);\r\nconst speechDetailRef = ref();\r\nconst { pageNumberChange, pageSizeChange, pageData } = usePage({\r\n  listApi: speechLibraryListApi,\r\n  props: {\r\n    pageSize: {\r\n      name: \"pageSize\",\r\n      default: 100,\r\n    },\r\n    pageNumber: {\r\n      name: \"pageNo\",\r\n      default: 1,\r\n    },\r\n  },\r\n  paramsData: {\r\n    companyId: virCompanyId,\r\n    companyCode: routeQuery.value.companyCode,\r\n  },\r\n});\r\nfunction openSpeechDetail(row) {\r\n  speechDetailRef.value.trigger(true, row);\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.speech-info {\r\n  > .title {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  :deep(.el-table) {\r\n    th.el-table__cell {\r\n      color: #242934;\r\n      background-color: #f5f7fb;\r\n    }\r\n  }\r\n  .speech-column {\r\n    width: 100%;\r\n    @include lineClamp();\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.report-speech-content {\r\n  height: 400px;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n","import script from \"./speech-library-info.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./speech-library-info.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./speech-library-info.vue?vue&type=style&index=0&id=1b6adddc&scoped=true&lang=scss\"\nimport \"./speech-library-info.vue?vue&type=style&index=1&id=1b6adddc&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1b6adddc\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_defineComponent","__name","setup","__props","SpeechDetailDrawer","defineAsyncComponent","routeQuery","useVueRouter","bd_virCompanyId","virCompanyId","LocalStorage","batchGetItem","speechDetailRef","ref","pageNumberChange","pageSizeChange","pageData","usePage","listApi","speechLibraryListApi","props","pageSize","name","default","pageNumber","paramsData","companyId","companyCode","value","openSpeechDetail","row","trigger","_ctx","_cache","_component_el_table_column","_resolveComponent","_component_el_tag","_component_el_button","_component_TableEmpty","_component_el_table","_component_PagePagination","_openBlock","_createElementBlock","_createElementVNode","_createVNode","data","_unref","list","height","empty","_withCtx","prop","label","align","innerHTML","content","_","width","type","statusStyleType","_createTextVNode","_toDisplayString","statusName","onClick","$event","link","pageTotal","onEmitPageSizeChange","onEmitPageNumberChange","ref_key","__exports__"],"sourceRoot":""}