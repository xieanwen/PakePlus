{"version":3,"file":"static/js/9663.54aa5b81.js","mappings":"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","sources":["webpack://daili/./src/components/business-management/ospreyCloudCall/report/list/supplement-info-drawer.vue?fb2a","webpack://daili/./src/components/business-management/ospreyCloudCall/report/list/supplement-info-drawer.vue","webpack://daili/./src/components/business-management/ospreyCloudCall/report/list/supplement-info-drawer.vue?02fe"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, createBlock as _createBlock, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-tip\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"business-label\"\n}\nconst _hoisted_3 = { class: \"label-list\" }\nconst _hoisted_4 = { class: \"form-tip\" }\nconst _hoisted_5 = { class: \"form-tip\" }\nconst _hoisted_6 = { style: {\"display\":\"flex\",\"align-items\":\"center\"} }\nconst _hoisted_7 = { class: \"form-tip\" }\nconst _hoisted_8 = { class: \"form-tip\" }\nconst _hoisted_9 = { class: \"form-tip\" }\nconst _hoisted_10 = { class: \"form-tip\" }\nconst _hoisted_11 = { class: \"form-tip\" }\nconst _hoisted_12 = { class: \"form-tip\" }\nconst _hoisted_13 = { class: \"form-tip\" }\n\nimport { ref, reactive, defineAsyncComponent } from \"vue\";\r\nimport { ElMessage, ElNotification } from \"element-plus\";\r\nimport { downLoadFile, LocalStorage } from \"jz-tool-lib\";\r\nimport {\r\n  industryTreeApi,\r\n  speechLibraryListApi,\r\n  supplementInfoComponentListApi,\r\n  submitSupplementInfoApi,\r\n} from \"@api/business-management-api\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'supplement-info-drawer',\n  emits: [\"emitFunc\"],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\r\nconst AddEditBusinessLabelDialog = defineAsyncComponent(\r\n  () => import(\"@/components/common/add-edit-business-label-dialog.vue\")\r\n);\r\nconst AddEditSpeechLibraryDrawer = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/sub-customer/details/speech-library/add-edit-speech-drawer.vue\"\r\n    )\r\n);\r\n\r\nconst emits = __emit;\r\nconst { bd_userInfo: userInfo, bd_virCompanyId: virCompanyId } =\r\n  LocalStorage.batchGetItem([\"bd_userInfo\", \"bd_virCompanyId\"]);\r\nconst ruleFormRef = ref();\r\nconst businessLabelRef = ref();\r\nconst addEditSpeechLibraryRef = ref();\r\nconst keyWords = ref<any[]>([]);\r\nconst industryList = ref<any>([]);\r\nconst speechLibraryList = ref<any>([]);\r\nconst initData = reactive({\r\n  type: \"\",\r\n  visible: false,\r\n  editComponents: [] as any[],\r\n  editId: \"\",\r\n});\r\nconst companyInfo = ref<Record<string, any>>({\r\n  id: \"\",\r\n  companyId: \"\",\r\n  companyCode: \"\",\r\n  companyName: \"\",\r\n  businessType: \"\", // 0:直客客户  1:接口客户\r\n});\r\nconst formData = reactive<{\r\n  componentList: any[];\r\n}>({\r\n  componentList: [],\r\n});\r\n\r\n// 新增话术库\r\nfunction handleOperateTemplate(\r\n  type: \"add\" | \"edit\",\r\n  info: Record<string, any>\r\n) {\r\n  const params = {\r\n    ...info,\r\n    companyId: companyInfo.value.companyId,\r\n    businessType: companyInfo.value.businessType,\r\n    subCompanyCode: companyInfo.value.companyCode,\r\n  };\r\n  addEditSpeechLibraryRef.value?.toggle(type, true, params);\r\n}\r\n\r\n// 提交按钮\r\nconst submitForm = async () => {\r\n  if (!ruleFormRef.value) return;\r\n  await ruleFormRef.value.validate((valid, fields) => {\r\n    if (valid) {\r\n      const oCardItem = formData.componentList.find((item) => {\r\n        return item.propertyType === 9 && item.propertyKey === \"operator_card\";\r\n      });\r\n      const oCardValueLen = oCardItem\r\n        ? Array.isArray(oCardItem.value)\r\n          ? oCardItem.value.length\r\n          : oCardItem.value.split(\",\").length\r\n        : 0;\r\n      const lCardItem = formData.componentList.find((item) => {\r\n        return item.propertyType === 9 && item.propertyKey === \"legal_card\";\r\n      });\r\n      const lCardValueLen = lCardItem\r\n        ? Array.isArray(lCardItem.value)\r\n          ? lCardItem.value.length\r\n          : lCardItem.value.split(\",\").length\r\n        : 0;\r\n      if (oCardItem && oCardValueLen < 2 && lCardItem && lCardValueLen < 2) {\r\n        return ElNotification({\r\n          title:\r\n            \"您的法人身份证、经办人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      if (oCardItem && oCardValueLen < 2) {\r\n        return ElNotification({\r\n          title: \"您的经办人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      if (lCardItem && lCardValueLen < 2) {\r\n        return ElNotification({\r\n          title: \"您的法人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      saveReport();\r\n    } else {\r\n      console.log(\"error submit!\", fields);\r\n    }\r\n  });\r\n};\r\n\r\n// 提交补充资料\r\nasync function saveReport() {\r\n  const detailList = formData.componentList.map((item: any) => {\r\n    let res: string;\r\n    if (item.propertyType === 1) {\r\n      if (item.propertyKey === \"business_label\") {\r\n        res = JSON.stringify(item.value);\r\n      } else {\r\n        res = item.value;\r\n      }\r\n    } else if (item.propertyType === 5) {\r\n      res = item.value.join(\",\");\r\n    } else if (item.propertyType === 12) {\r\n      let list = item.optionBOList\r\n        .filter((v: any) => {\r\n          return item.value.includes(v.id);\r\n        })\r\n        .map((v: any) => {\r\n          return { key: v.id, value: v.value2 };\r\n        });\r\n      res = JSON.stringify(list);\r\n    } else if (item.propertyKey === \"industry\") {\r\n      res = item.value[item.value.length - 1];\r\n    } else if (item.propertyType === 14) {\r\n      res = keyWords.value.join(\",\");\r\n    } else {\r\n      res = item.value;\r\n    }\r\n    return {\r\n      mainId: item.mainId,\r\n      propertyKey: item.propertyKey,\r\n      propertyType: item.propertyType,\r\n      remark: item.remark,\r\n      tagName: item.tagName,\r\n      value: res,\r\n    };\r\n  });\r\n  const params = {\r\n    detailList,\r\n    profileId: Number(userInfo.profileId),\r\n    profileName: userInfo.realName,\r\n    reportId: companyInfo.value.id,\r\n    recordId: initData.editId || \"\", // 补充记录里重新提交时的id\r\n  };\r\n  const { statusCode, msg } = await submitSupplementInfoApi.getData(params);\r\n  if (statusCode === 0) {\r\n    ElMessage({ message: msg || \"已保存\", type: \"success\" });\r\n    emits(\"emitFunc\", {\r\n      type: \"list\",\r\n    });\r\n    handleClose();\r\n  }\r\n}\r\n\r\n// 业务报备动态组件（新增）\r\nasync function getAddReportComponentList() {\r\n  const params = {\r\n    reportId: companyInfo.value.id,\r\n  };\r\n  const { data } = await supplementInfoComponentListApi.getData(params);\r\n  const { list } = supplementInfoComponentListApi.handleData(\r\n    data,\r\n    companyInfo.value\r\n  );\r\n  formData.componentList = list;\r\n}\r\n\r\n// 处理补充记录里传过来的数据\r\nfunction handleEditData() {\r\n  initData.editComponents.forEach((item) => {\r\n    item.propertyKey = item.componentBO.propertyKey;\r\n    item.optionBOList = item.componentBO.optionBOList;\r\n    item.templateBOList = item.componentBO.templateBOList;\r\n    item.verifyBOList = item.componentBO.verifyBOList;\r\n    item.isRequired = item.componentBO.isRequired;\r\n    item.placeholder = item.componentBO.placeholder;\r\n    item.maxLength = item.componentBO.maxLength;\r\n  });\r\n  return initData.editComponents.map((i) => {\r\n    if ([9, 13].includes(i.componentBO.propertyType)) {\r\n      // 附件、图片\r\n      i.fileList = i.value;\r\n      i.value = i.value.map((item) => item.fileId).join(\",\");\r\n      const verifyFileInfo = i.verifyBOList.find(\r\n        (verifyItem) => verifyItem.type === \"file\"\r\n      );\r\n      i.fileLimit = verifyFileInfo?.length || 1;\r\n    } else if (i.componentBO.propertyType === 2 && i.componentBO.propertyKey) {\r\n      // 话术\r\n      if (i.optionInputValue) {\r\n        let res = JSON.parse(i.optionInputValue);\r\n        i.value = String(res.id) || \"\";\r\n      }\r\n    } else if (i.componentBO.propertyType === 12) {\r\n      // 多选输入框\r\n      const arr = i.value && JSON.parse(i.value);\r\n      i.value = [];\r\n      arr.forEach((item) => {\r\n        i.value.push(item.key);\r\n      });\r\n      i.optionBOList.forEach((item) => {\r\n        arr.forEach((items) => {\r\n          if (item.id === items.key) {\r\n            item.value2 = items.value;\r\n          }\r\n        });\r\n      });\r\n    } else if (i.propertyType === 5) {\r\n      // 多选框\r\n      i.value = i.value.split(\",\").map((i) => +i);\r\n    } else if ([4, 11].includes(i.propertyType)) {\r\n      // 单选、单选输入框\r\n      i.value = +i.value;\r\n    }\r\n    return i;\r\n  });\r\n}\r\n\r\n// 获取行业列表、话术模板列表\r\nfunction getAllList() {\r\n  Promise.all([getIndustryTree(), getSpeechLibraryList()]).then(() => {\r\n    if (initData.type === \"add\") {\r\n      getAddReportComponentList();\r\n    } else if (initData.type === \"edit\") {\r\n      formData.componentList = handleEditData();\r\n    }\r\n  });\r\n}\r\n\r\n// 查询行业树\r\nconst getIndustryTree = async () => {\r\n  const { data } = await industryTreeApi.getData();\r\n  industryList.value = industryTreeApi.handleData(data);\r\n};\r\n\r\n// 话术模板\r\nconst getSpeechLibraryList = async () => {\r\n  const params = {\r\n    pageSize: 100,\r\n    pageNo: 1,\r\n    companyCode: companyInfo.value.companyCode,\r\n    companyId: virCompanyId,\r\n  };\r\n  const { data } = await speechLibraryListApi.getData(params);\r\n  speechLibraryList.value = data.records;\r\n};\r\n\r\n// 组件校验规则\r\nfunction validateRule(row: any) {\r\n  const rules: any[] = [];\r\n  rules.push({\r\n    required: true,\r\n    message:\r\n      row.propertyType === 1 && row.propertyKey === \"company_name\"\r\n        ? \"请从列表中选择\"\r\n        : row.placeholder\r\n        ? row.placeholder\r\n        : row.tagName + \"不能为空\",\r\n    trigger: \"change\",\r\n  });\r\n  return rules;\r\n}\r\n\r\n// 话术关键词校验\r\nfunction validateTemplateRule(\r\n  value: string,\r\n  callback: any,\r\n  index: number,\r\n  row: any\r\n) {\r\n  if (row.propertyType === 14) {\r\n    if (!keyWords.value.length) {\r\n      callback(new Error(\"话术关键词不能为空\"));\r\n    }\r\n    if (keyWords.value.length < 5) {\r\n      callback(new Error(\"话术关键词不能少于5个\"));\r\n    }\r\n  } else {\r\n    const list = row.value;\r\n    if (list.length && list.includes(row.optionBOList[index].id) && !value) {\r\n      callback(new Error(\"请输入\"));\r\n    }\r\n  }\r\n  callback();\r\n}\r\n\r\n// 获取上传文件数据\r\nfunction handleFile(value: any) {\r\n  const { ids, key } = value;\r\n  formData.componentList.forEach((item: any) => {\r\n    if (item.propertyKey === key) {\r\n      item.value = ids;\r\n    }\r\n  });\r\n}\r\n\r\n// 业务标签\r\nfunction handleBusinessLabel(item) {\r\n  const list = item.value;\r\n  const labelList = list.reduce((arr, item) => {\r\n    const labels = item.labels.map((sonItem) => {\r\n      sonItem.groupId = item.group.id;\r\n      return sonItem;\r\n    });\r\n    return arr.concat(labels);\r\n  }, []);\r\n  const labelValue = labelList.map((item) => `${item.id}&${item.groupId}`);\r\n  const groupLabelValue = list.map((item) => item.group.id);\r\n  businessLabelRef.value.trigger(true, {\r\n    labelValue,\r\n    groupLabelValue,\r\n  });\r\n}\r\n\r\n// 更新业务标签\r\nfunction updateBusinessLabel(data?: { value: any[]; labelText: any[] }) {\r\n  const labelInfo = formData.componentList.find(\r\n    (item) => item.propertyKey === \"business_label\"\r\n  );\r\n  labelInfo.value = data?.value ?? [];\r\n  labelInfo.labelText = data?.labelText ?? [];\r\n}\r\n\r\n// 关闭抽屉\r\nfunction handleClose() {\r\n  formData.componentList = [];\r\n  initData.visible = false;\r\n}\r\n\r\nfunction trigger(\r\n  visible: boolean,\r\n  type: \"add\" | \"edit\",\r\n  info: Record<string, any>,\r\n  data?: any\r\n) {\r\n  initData.visible = visible;\r\n  initData.type = type;\r\n  companyInfo.value = info;\r\n  initData.editComponents = data?.recordContentList;\r\n  initData.editId = data?.id;\r\n  if (visible) {\r\n    getAllList();\r\n  }\r\n}\r\n\r\n__expose({\r\n  trigger,\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_option = _resolveComponent(\"el-option\")!\n  const _component_el_select = _resolveComponent(\"el-select\")!\n  const _component_el_input_number = _resolveComponent(\"el-input-number\")!\n  const _component_el_radio = _resolveComponent(\"el-radio\")!\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\")!\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\")!\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\")!\n  const _component_CustomUpload = _resolveComponent(\"CustomUpload\")!\n  const _component_el_cascader = _resolveComponent(\"el-cascader\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n  const _component_el_empty = _resolveComponent(\"el-empty\")!\n  const _component_el_drawer = _resolveComponent(\"el-drawer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_el_drawer, {\n      modelValue: initData.visible,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((initData.visible) = $event)),\n      class: \"custom-drawer\",\n      title: \"补充资料\",\n      size: \"700\",\n      onClose: handleClose\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_el_button, { onClick: handleClose }, {\n          default: _withCtx(() => _cache[5] || (_cache[5] = [\n            _createTextVNode(\"取消\")\n          ])),\n          _: 1\n        }),\n        _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: submitForm\n        }, {\n          default: _withCtx(() => _cache[6] || (_cache[6] = [\n            _createTextVNode(\"提交\")\n          ])),\n          _: 1\n        })\n      ]),\n      default: _withCtx(() => [\n        _cache[7] || (_cache[7] = _createElementVNode(\"p\", { class: \"dashed-tip\" }, \" 注意：为了您能更好的使用线路，请根据提示补充或重填以下资料。您补充的资料将覆盖您之前填写的资料。 \", -1)),\n        (formData.componentList.length)\n          ? (_openBlock(), _createBlock(_component_el_form, {\n              key: 0,\n              ref_key: \"ruleFormRef\",\n              ref: ruleFormRef,\n              model: formData,\n              \"label-width\": \"100px\",\n              \"label-position\": \"top\"\n            }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(formData.componentList, (item, index) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: item.id\n                  }, [\n                    (item.propertyType === 1)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 0,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_1, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            (item.propertyKey === 'business_label')\n                              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                                  _createVNode(_component_el_button, {\n                                    type: \"primary\",\n                                    onClick: ($event: any) => (handleBusinessLabel(item, index))\n                                  }, {\n                                    default: _withCtx(() => _cache[2] || (_cache[2] = [\n                                      _createTextVNode(\"添加\")\n                                    ])),\n                                    _: 2\n                                  }, 1032, [\"onClick\"]),\n                                  _createElementVNode(\"div\", _hoisted_3, [\n                                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.labelText, (labelItem, labelIndex) => {\n                                      return (_openBlock(), _createElementBlock(\"span\", { key: labelIndex }, _toDisplayString(labelItem), 1))\n                                    }), 128))\n                                  ])\n                                ]))\n                              : (_openBlock(), _createBlock(_component_el_input, {\n                                  key: 1,\n                                  modelValue: item.value,\n                                  \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                                  modelModifiers: { trim: true },\n                                  placeholder: item.placeholder,\n                                  disabled: item.inputDisabled\n                                }, _createSlots({ _: 2 }, [\n                                  (item.unit)\n                                    ? {\n                                        name: \"append\",\n                                        fn: _withCtx(() => [\n                                          _createTextVNode(_toDisplayString(item.unit), 1)\n                                        ]),\n                                        key: \"0\"\n                                      }\n                                    : undefined\n                                ]), 1032, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\", \"disabled\"]))\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 2)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 1,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_4, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            (item.propertyKey === 'verbal_trick')\n                              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                                  _createVNode(_component_el_select, {\n                                    modelValue: item.value,\n                                    \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                                    placeholder: item.placeholder\n                                  }, {\n                                    default: _withCtx(() => [\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(speechLibraryList.value, (speechItem) => {\n                                        return (_openBlock(), _createBlock(_component_el_option, {\n                                          key: speechItem.id,\n                                          label: speechItem.title,\n                                          value: speechItem.id\n                                        }, null, 8, [\"label\", \"value\"]))\n                                      }), 128))\n                                    ]),\n                                    _: 2\n                                  }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"]),\n                                  _createVNode(_component_el_button, {\n                                    type: \"primary\",\n                                    style: {\"margin-left\":\"10px\"},\n                                    onClick: _cache[0] || (_cache[0] = ($event: any) => (handleOperateTemplate('add', {})))\n                                  }, {\n                                    default: _withCtx(() => _cache[3] || (_cache[3] = [\n                                      _createTextVNode(\"添加\")\n                                    ])),\n                                    _: 1\n                                  })\n                                ], 64))\n                              : (_openBlock(), _createBlock(_component_el_input, {\n                                  key: 1,\n                                  type: \"textarea\",\n                                  rows: 3,\n                                  maxlength: item.maxLength,\n                                  \"show-word-limit\": \"\",\n                                  modelValue: item.value,\n                                  \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                                  modelModifiers: { trim: true },\n                                  placeholder: item.placeholder\n                                }, null, 8, [\"maxlength\", \"modelValue\", \"onUpdate:modelValue\", \"placeholder\"]))\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 7)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 2,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_5, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createElementVNode(\"div\", _hoisted_6, [\n                              _createVNode(_component_el_input_number, {\n                                modelValue: item.value,\n                                \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                                precision: 2,\n                                min: 0.01,\n                                max: 9999999999,\n                                label: \"描述文字\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n                            ])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 4)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 3,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_7, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_radio_group, {\n                              modelValue: item.value,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event)\n                            }, {\n                              default: _withCtx(() => [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.optionBOList, (v, k) => {\n                                  return (_openBlock(), _createBlock(_component_el_radio, {\n                                    value: v.id,\n                                    key: k\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(v.value), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1032, [\"value\"]))\n                                }), 128))\n                              ]),\n                              _: 2\n                            }, 1032, [\"modelValue\", \"onUpdate:modelValue\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 11)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 4,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_8, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_select, {\n                              modelValue: item.value,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                              filterable: \"\",\n                              placeholder: item.placeholder,\n                              style: {\"width\":\"100%\"}\n                            }, {\n                              default: _withCtx(() => [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.optionBOList, (item) => {\n                                  return (_openBlock(), _createBlock(_component_el_option, {\n                                    key: item.id,\n                                    label: item.value,\n                                    value: item.id\n                                  }, null, 8, [\"label\", \"value\"]))\n                                }), 128))\n                              ]),\n                              _: 2\n                            }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 5)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 5,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_9, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_checkbox_group, {\n                              modelValue: item.value,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event)\n                            }, {\n                              default: _withCtx(() => [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.optionBOList, (v, j) => {\n                                  return (_openBlock(), _createBlock(_component_el_checkbox, {\n                                    value: v.id,\n                                    key: j\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(v.value), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1032, [\"value\"]))\n                                }), 128))\n                              ]),\n                              _: 2\n                            }, 1032, [\"modelValue\", \"onUpdate:modelValue\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 12)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 6,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_10, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_checkbox_group, {\n                              modelValue: item.value,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event)\n                            }, {\n                              default: _withCtx(() => [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.optionBOList, (v, j) => {\n                                  return (_openBlock(), _createElementBlock(\"div\", {\n                                    style: {\"display\":\"flex\",\"margin-bottom\":\"20px\"},\n                                    key: j\n                                  }, [\n                                    _createVNode(_component_el_checkbox, {\n                                      style: {\"width\":\"100px\"},\n                                      value: v.id\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(v.value), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"value\"]),\n                                    _createVNode(_component_el_form_item, {\n                                      prop: \r\n                    'componentList.' + index + '.optionBOList.' + j + '.value2'\r\n                  ,\n                                      rules: [\r\n                    {\r\n                      validator: (rule, value, callback) => {\r\n                        validateTemplateRule(value, callback, j, item);\r\n                      },\r\n                    },\r\n                  ]\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createVNode(_component_el_input, {\n                                          disabled: !item.value.includes(v.id),\n                                          modelValue: v.value2,\n                                          \"onUpdate:modelValue\": ($event: any) => ((v.value2) = $event),\n                                          placeholder: v.placeholder\n                                        }, null, 8, [\"disabled\", \"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"prop\", \"rules\"])\n                                  ]))\n                                }), 128))\n                              ]),\n                              _: 2\n                            }, 1032, [\"modelValue\", \"onUpdate:modelValue\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 9)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 7,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_11, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_CustomUpload, {\n                              \"show-word-limit\": \"10\",\n                              \"list-type\": \"text\",\n                              accept: \"*\",\n                              defaultFileList: item.fileList,\n                              \"onUpdate:defaultFileList\": ($event: any) => ((item.fileList) = $event),\n                              editData: item,\n                              maxVolume: 20,\n                              limit: item.fileLimit,\n                              onEmitUpload: handleFile\n                            }, null, 8, [\"defaultFileList\", \"onUpdate:defaultFileList\", \"editData\", \"limit\"]),\n                            (item.templateBOList && item.templateBOList.length)\n                              ? (_openBlock(), _createBlock(_component_el_button, {\n                                  key: 0,\n                                  onClick: ($event: any) => (_unref(downLoadFile)(item.templateBOList[0].fileUrl))\n                                }, {\n                                  default: _withCtx(() => _cache[4] || (_cache[4] = [\n                                    _createTextVNode(\"下载模板 \")\n                                  ])),\n                                  _: 2\n                                }, 1032, [\"onClick\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyType === 13)\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 8,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_12, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_CustomUpload, {\n                              \"show-word-limit\": \"10\",\n                              \"list-type\": \"picture-card\",\n                              defaultFileList: item.fileList,\n                              \"onUpdate:defaultFileList\": ($event: any) => ((item.fileList) = $event),\n                              editData: item,\n                              maxVolume: 20,\n                              limit: item.fileLimit,\n                              onEmitUpload: handleFile\n                            }, null, 8, [\"defaultFileList\", \"onUpdate:defaultFileList\", \"editData\", \"limit\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true),\n                    (item.propertyKey === 'industry')\n                      ? (_openBlock(), _createBlock(_component_el_form_item, {\n                          key: 9,\n                          prop: 'componentList.' + index + '.value',\n                          rules: validateRule(item)\n                        }, {\n                          label: _withCtx(() => [\n                            _createElementVNode(\"span\", null, _toDisplayString(item.tagName), 1),\n                            _createElementVNode(\"span\", _hoisted_13, \"补充理由：\" + _toDisplayString(item.remark), 1)\n                          ]),\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_cascader, {\n                              style: {\"width\":\"100%\"},\n                              modelValue: item.value,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.value) = $event),\n                              emitPath: true,\n                              filterable: \"\",\n                              clearable: \"\",\n                              placeholder: \"请选择\",\n                              props: {\r\n                value: 'id',\r\n                label: 'name',\r\n                children: 'children',\r\n                checkStrictly: false,\r\n              },\n                              options: industryList.value,\n                              disabled: item.inputDisabled\n                            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"options\", \"disabled\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"prop\", \"rules\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]))\n                }), 128))\n              ]),\n              _: 1\n            }, 8, [\"model\"]))\n          : (_openBlock(), _createBlock(_component_el_empty, {\n              key: 1,\n              \"image-size\": 100,\n              description: \"暂无数据\"\n            }))\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createVNode(_unref(AddEditSpeechLibraryDrawer), {\n      ref_key: \"addEditSpeechLibraryRef\",\n      ref: addEditSpeechLibraryRef,\n      onEmitFunc: getSpeechLibraryList\n    }, null, 512),\n    _createVNode(_unref(AddEditBusinessLabelDialog), {\n      ref_key: \"businessLabelRef\",\n      ref: businessLabelRef,\n      onEmitFunc: updateBusinessLabel\n    }, null, 512)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <el-drawer\r\n    v-model=\"initData.visible\"\r\n    class=\"custom-drawer\"\r\n    title=\"补充资料\"\r\n    size=\"700\"\r\n    @close=\"handleClose\"\r\n  >\r\n    <p class=\"dashed-tip\">\r\n      注意：为了您能更好的使用线路，请根据提示补充或重填以下资料。您补充的资料将覆盖您之前填写的资料。\r\n    </p>\r\n    <el-form\r\n      v-if=\"formData.componentList.length\"\r\n      ref=\"ruleFormRef\"\r\n      :model=\"formData\"\r\n      label-width=\"100px\"\r\n      label-position=\"top\"\r\n    >\r\n      <div v-for=\"(item, index) in formData.componentList\" :key=\"item.id\">\r\n        <!-- 单行输入框 -->\r\n        <template v-if=\"item.propertyType === 1\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <div\r\n              v-if=\"item.propertyKey === 'business_label'\"\r\n              class=\"business-label\"\r\n            >\r\n              <el-button\r\n                type=\"primary\"\r\n                @click=\"handleBusinessLabel(item, index)\"\r\n                >添加</el-button\r\n              >\r\n              <div class=\"label-list\">\r\n                <span\r\n                  v-for=\"(labelItem, labelIndex) in item.labelText\"\r\n                  :key=\"labelIndex\"\r\n                  >{{ labelItem }}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <template v-else>\r\n              <el-input\r\n                v-model.trim=\"item.value\"\r\n                :placeholder=\"item.placeholder\"\r\n                :disabled=\"item.inputDisabled\"\r\n              >\r\n                <template v-if=\"item.unit\" #append>{{ item.unit }}</template>\r\n              </el-input>\r\n            </template>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 多行输入框 -->\r\n        <template v-if=\"item.propertyType === 2\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <!-- 话术报备 -->\r\n            <template v-if=\"item.propertyKey === 'verbal_trick'\">\r\n              <el-select v-model=\"item.value\" :placeholder=\"item.placeholder\">\r\n                <el-option\r\n                  v-for=\"speechItem in speechLibraryList\"\r\n                  :key=\"speechItem.id\"\r\n                  :label=\"speechItem.title\"\r\n                  :value=\"speechItem.id\"\r\n                />\r\n              </el-select>\r\n              <el-button\r\n                type=\"primary\"\r\n                style=\"margin-left: 10px\"\r\n                @click=\"handleOperateTemplate('add', {})\"\r\n                >添加</el-button\r\n              >\r\n            </template>\r\n            <template v-else>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"3\"\r\n                :maxlength=\"item.maxLength\"\r\n                show-word-limit\r\n                v-model.trim=\"item.value\"\r\n                :placeholder=\"item.placeholder\"\r\n              ></el-input>\r\n            </template>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 数字输入框 -->\r\n        <template v-if=\"item.propertyType === 7\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-input-number\r\n                v-model=\"item.value\"\r\n                :precision=\"2\"\r\n                :min=\"0.01\"\r\n                :max=\"9999999999\"\r\n                label=\"描述文字\"\r\n              ></el-input-number>\r\n              <span>{{ item.unit }}</span>\r\n            </div>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 单选框 -->\r\n        <template v-if=\"item.propertyType === 4\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <el-radio-group v-model=\"item.value\">\r\n              <el-radio\r\n                :value=\"v.id\"\r\n                v-for=\"(v, k) in item.optionBOList\"\r\n                :key=\"k\"\r\n                >{{ v.value }}\r\n              </el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 单选输入 -->\r\n        <template v-if=\"item.propertyType === 11\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <el-select\r\n              v-model=\"item.value\"\r\n              filterable\r\n              :placeholder=\"item.placeholder\"\r\n              style=\"width: 100%\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in item.optionBOList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.value\"\r\n                :value=\"item.id\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 多选框 -->\r\n        <template v-if=\"item.propertyType === 5\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <el-checkbox-group v-model=\"item.value\">\r\n              <el-checkbox\r\n                :value=\"v.id\"\r\n                v-for=\"(v, j) in item.optionBOList\"\r\n                :key=\"j\"\r\n                >{{ v.value }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 多选输入框 -->\r\n        <template v-if=\"item.propertyType === 12\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <el-checkbox-group v-model=\"item.value\">\r\n              <div\r\n                style=\"display: flex; margin-bottom: 20px\"\r\n                v-for=\"(v, j) in item.optionBOList\"\r\n                :key=\"j\"\r\n              >\r\n                <el-checkbox style=\"width: 100px\" :value=\"v.id\"\r\n                  >{{ v.value }}\r\n                </el-checkbox>\r\n                <el-form-item\r\n                  :prop=\"\r\n                    'componentList.' + index + '.optionBOList.' + j + '.value2'\r\n                  \"\r\n                  :rules=\"[\r\n                    {\r\n                      validator: (rule, value, callback) => {\r\n                        validateTemplateRule(value, callback, j, item);\r\n                      },\r\n                    },\r\n                  ]\"\r\n                >\r\n                  <el-input\r\n                    :disabled=\"!item.value.includes(v.id)\"\r\n                    v-model=\"v.value2\"\r\n                    :placeholder=\"v.placeholder\"\r\n                  ></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-checkbox-group>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 附件 -->\r\n        <template v-if=\"item.propertyType === 9\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <CustomUpload\r\n              show-word-limit=\"10\"\r\n              list-type=\"text\"\r\n              accept=\"*\"\r\n              v-model:defaultFileList=\"item.fileList\"\r\n              :editData=\"item\"\r\n              :maxVolume=\"20\"\r\n              :limit=\"item.fileLimit\"\r\n              @emitUpload=\"handleFile\"\r\n            />\r\n            <template v-if=\"item.templateBOList && item.templateBOList.length\">\r\n              <el-button @click=\"downLoadFile(item.templateBOList[0].fileUrl)\"\r\n                >下载模板\r\n              </el-button>\r\n            </template>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 图片 -->\r\n        <template v-if=\"item.propertyType === 13\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <CustomUpload\r\n              show-word-limit=\"10\"\r\n              list-type=\"picture-card\"\r\n              v-model:defaultFileList=\"item.fileList\"\r\n              :editData=\"item\"\r\n              :maxVolume=\"20\"\r\n              :limit=\"item.fileLimit\"\r\n              @emitUpload=\"handleFile\"\r\n            />\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 行业 -->\r\n        <template v-if=\"item.propertyKey === 'industry'\">\r\n          <el-form-item\r\n            :prop=\"'componentList.' + index + '.value'\"\r\n            :rules=\"validateRule(item)\"\r\n          >\r\n            <template #label>\r\n              <span>{{ item.tagName }}</span>\r\n              <span class=\"form-tip\">补充理由：{{ item.remark }}</span>\r\n            </template>\r\n            <el-cascader\r\n              style=\"width: 100%\"\r\n              v-model=\"item.value\"\r\n              :emitPath=\"true\"\r\n              filterable\r\n              clearable\r\n              placeholder=\"请选择\"\r\n              :props=\"{\r\n                value: 'id',\r\n                label: 'name',\r\n                children: 'children',\r\n                checkStrictly: false,\r\n              }\"\r\n              :options=\"industryList\"\r\n              :disabled=\"item.inputDisabled\"\r\n            ></el-cascader>\r\n          </el-form-item>\r\n        </template>\r\n      </div>\r\n    </el-form>\r\n    <el-empty v-else :image-size=\"100\" description=\"暂无数据\"></el-empty>\r\n    <template #footer>\r\n      <el-button @click=\"handleClose\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n    </template>\r\n  </el-drawer>\r\n  <AddEditSpeechLibraryDrawer\r\n    ref=\"addEditSpeechLibraryRef\"\r\n    @emitFunc=\"getSpeechLibraryList\"\r\n  ></AddEditSpeechLibraryDrawer>\r\n  <AddEditBusinessLabelDialog\r\n    ref=\"businessLabelRef\"\r\n    @emitFunc=\"updateBusinessLabel\"\r\n  ></AddEditBusinessLabelDialog>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, defineAsyncComponent } from \"vue\";\r\nimport { ElMessage, ElNotification } from \"element-plus\";\r\nimport { downLoadFile, LocalStorage } from \"jz-tool-lib\";\r\nimport {\r\n  industryTreeApi,\r\n  speechLibraryListApi,\r\n  supplementInfoComponentListApi,\r\n  submitSupplementInfoApi,\r\n} from \"@api/business-management-api\";\r\n\r\nconst AddEditBusinessLabelDialog = defineAsyncComponent(\r\n  () => import(\"@/components/common/add-edit-business-label-dialog.vue\")\r\n);\r\nconst AddEditSpeechLibraryDrawer = defineAsyncComponent(\r\n  () =>\r\n    import(\r\n      \"@/components/business-management/ospreyCloudCall/sub-customer/details/speech-library/add-edit-speech-drawer.vue\"\r\n    )\r\n);\r\n\r\nconst emits = defineEmits<{\r\n  (\r\n    e: \"emitFunc\",\r\n    value: {\r\n      type: \"list\" | \"report-electron\" | \"report-manual\";\r\n      info?: Record<string, any>;\r\n    }\r\n  ): void;\r\n}>();\r\nconst { bd_userInfo: userInfo, bd_virCompanyId: virCompanyId } =\r\n  LocalStorage.batchGetItem([\"bd_userInfo\", \"bd_virCompanyId\"]);\r\nconst ruleFormRef = ref();\r\nconst businessLabelRef = ref();\r\nconst addEditSpeechLibraryRef = ref();\r\nconst keyWords = ref<any[]>([]);\r\nconst industryList = ref<any>([]);\r\nconst speechLibraryList = ref<any>([]);\r\nconst initData = reactive({\r\n  type: \"\",\r\n  visible: false,\r\n  editComponents: [] as any[],\r\n  editId: \"\",\r\n});\r\nconst companyInfo = ref<Record<string, any>>({\r\n  id: \"\",\r\n  companyId: \"\",\r\n  companyCode: \"\",\r\n  companyName: \"\",\r\n  businessType: \"\", // 0:直客客户  1:接口客户\r\n});\r\nconst formData = reactive<{\r\n  componentList: any[];\r\n}>({\r\n  componentList: [],\r\n});\r\n\r\n// 新增话术库\r\nfunction handleOperateTemplate(\r\n  type: \"add\" | \"edit\",\r\n  info: Record<string, any>\r\n) {\r\n  const params = {\r\n    ...info,\r\n    companyId: companyInfo.value.companyId,\r\n    businessType: companyInfo.value.businessType,\r\n    subCompanyCode: companyInfo.value.companyCode,\r\n  };\r\n  addEditSpeechLibraryRef.value?.toggle(type, true, params);\r\n}\r\n\r\n// 提交按钮\r\nconst submitForm = async () => {\r\n  if (!ruleFormRef.value) return;\r\n  await ruleFormRef.value.validate((valid, fields) => {\r\n    if (valid) {\r\n      const oCardItem = formData.componentList.find((item) => {\r\n        return item.propertyType === 9 && item.propertyKey === \"operator_card\";\r\n      });\r\n      const oCardValueLen = oCardItem\r\n        ? Array.isArray(oCardItem.value)\r\n          ? oCardItem.value.length\r\n          : oCardItem.value.split(\",\").length\r\n        : 0;\r\n      const lCardItem = formData.componentList.find((item) => {\r\n        return item.propertyType === 9 && item.propertyKey === \"legal_card\";\r\n      });\r\n      const lCardValueLen = lCardItem\r\n        ? Array.isArray(lCardItem.value)\r\n          ? lCardItem.value.length\r\n          : lCardItem.value.split(\",\").length\r\n        : 0;\r\n      if (oCardItem && oCardValueLen < 2 && lCardItem && lCardValueLen < 2) {\r\n        return ElNotification({\r\n          title:\r\n            \"您的法人身份证、经办人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      if (oCardItem && oCardValueLen < 2) {\r\n        return ElNotification({\r\n          title: \"您的经办人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      if (lCardItem && lCardValueLen < 2) {\r\n        return ElNotification({\r\n          title: \"您的法人身份证只上传了一张图片，请上传身份证正反面后再提交\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n      saveReport();\r\n    } else {\r\n      console.log(\"error submit!\", fields);\r\n    }\r\n  });\r\n};\r\n\r\n// 提交补充资料\r\nasync function saveReport() {\r\n  const detailList = formData.componentList.map((item: any) => {\r\n    let res: string;\r\n    if (item.propertyType === 1) {\r\n      if (item.propertyKey === \"business_label\") {\r\n        res = JSON.stringify(item.value);\r\n      } else {\r\n        res = item.value;\r\n      }\r\n    } else if (item.propertyType === 5) {\r\n      res = item.value.join(\",\");\r\n    } else if (item.propertyType === 12) {\r\n      let list = item.optionBOList\r\n        .filter((v: any) => {\r\n          return item.value.includes(v.id);\r\n        })\r\n        .map((v: any) => {\r\n          return { key: v.id, value: v.value2 };\r\n        });\r\n      res = JSON.stringify(list);\r\n    } else if (item.propertyKey === \"industry\") {\r\n      res = item.value[item.value.length - 1];\r\n    } else if (item.propertyType === 14) {\r\n      res = keyWords.value.join(\",\");\r\n    } else {\r\n      res = item.value;\r\n    }\r\n    return {\r\n      mainId: item.mainId,\r\n      propertyKey: item.propertyKey,\r\n      propertyType: item.propertyType,\r\n      remark: item.remark,\r\n      tagName: item.tagName,\r\n      value: res,\r\n    };\r\n  });\r\n  const params = {\r\n    detailList,\r\n    profileId: Number(userInfo.profileId),\r\n    profileName: userInfo.realName,\r\n    reportId: companyInfo.value.id,\r\n    recordId: initData.editId || \"\", // 补充记录里重新提交时的id\r\n  };\r\n  const { statusCode, msg } = await submitSupplementInfoApi.getData(params);\r\n  if (statusCode === 0) {\r\n    ElMessage({ message: msg || \"已保存\", type: \"success\" });\r\n    emits(\"emitFunc\", {\r\n      type: \"list\",\r\n    });\r\n    handleClose();\r\n  }\r\n}\r\n\r\n// 业务报备动态组件（新增）\r\nasync function getAddReportComponentList() {\r\n  const params = {\r\n    reportId: companyInfo.value.id,\r\n  };\r\n  const { data } = await supplementInfoComponentListApi.getData(params);\r\n  const { list } = supplementInfoComponentListApi.handleData(\r\n    data,\r\n    companyInfo.value\r\n  );\r\n  formData.componentList = list;\r\n}\r\n\r\n// 处理补充记录里传过来的数据\r\nfunction handleEditData() {\r\n  initData.editComponents.forEach((item) => {\r\n    item.propertyKey = item.componentBO.propertyKey;\r\n    item.optionBOList = item.componentBO.optionBOList;\r\n    item.templateBOList = item.componentBO.templateBOList;\r\n    item.verifyBOList = item.componentBO.verifyBOList;\r\n    item.isRequired = item.componentBO.isRequired;\r\n    item.placeholder = item.componentBO.placeholder;\r\n    item.maxLength = item.componentBO.maxLength;\r\n  });\r\n  return initData.editComponents.map((i) => {\r\n    if ([9, 13].includes(i.componentBO.propertyType)) {\r\n      // 附件、图片\r\n      i.fileList = i.value;\r\n      i.value = i.value.map((item) => item.fileId).join(\",\");\r\n      const verifyFileInfo = i.verifyBOList.find(\r\n        (verifyItem) => verifyItem.type === \"file\"\r\n      );\r\n      i.fileLimit = verifyFileInfo?.length || 1;\r\n    } else if (i.componentBO.propertyType === 2 && i.componentBO.propertyKey) {\r\n      // 话术\r\n      if (i.optionInputValue) {\r\n        let res = JSON.parse(i.optionInputValue);\r\n        i.value = String(res.id) || \"\";\r\n      }\r\n    } else if (i.componentBO.propertyType === 12) {\r\n      // 多选输入框\r\n      const arr = i.value && JSON.parse(i.value);\r\n      i.value = [];\r\n      arr.forEach((item) => {\r\n        i.value.push(item.key);\r\n      });\r\n      i.optionBOList.forEach((item) => {\r\n        arr.forEach((items) => {\r\n          if (item.id === items.key) {\r\n            item.value2 = items.value;\r\n          }\r\n        });\r\n      });\r\n    } else if (i.propertyType === 5) {\r\n      // 多选框\r\n      i.value = i.value.split(\",\").map((i) => +i);\r\n    } else if ([4, 11].includes(i.propertyType)) {\r\n      // 单选、单选输入框\r\n      i.value = +i.value;\r\n    }\r\n    return i;\r\n  });\r\n}\r\n\r\n// 获取行业列表、话术模板列表\r\nfunction getAllList() {\r\n  Promise.all([getIndustryTree(), getSpeechLibraryList()]).then(() => {\r\n    if (initData.type === \"add\") {\r\n      getAddReportComponentList();\r\n    } else if (initData.type === \"edit\") {\r\n      formData.componentList = handleEditData();\r\n    }\r\n  });\r\n}\r\n\r\n// 查询行业树\r\nconst getIndustryTree = async () => {\r\n  const { data } = await industryTreeApi.getData();\r\n  industryList.value = industryTreeApi.handleData(data);\r\n};\r\n\r\n// 话术模板\r\nconst getSpeechLibraryList = async () => {\r\n  const params = {\r\n    pageSize: 100,\r\n    pageNo: 1,\r\n    companyCode: companyInfo.value.companyCode,\r\n    companyId: virCompanyId,\r\n  };\r\n  const { data } = await speechLibraryListApi.getData(params);\r\n  speechLibraryList.value = data.records;\r\n};\r\n\r\n// 组件校验规则\r\nfunction validateRule(row: any) {\r\n  const rules: any[] = [];\r\n  rules.push({\r\n    required: true,\r\n    message:\r\n      row.propertyType === 1 && row.propertyKey === \"company_name\"\r\n        ? \"请从列表中选择\"\r\n        : row.placeholder\r\n        ? row.placeholder\r\n        : row.tagName + \"不能为空\",\r\n    trigger: \"change\",\r\n  });\r\n  return rules;\r\n}\r\n\r\n// 话术关键词校验\r\nfunction validateTemplateRule(\r\n  value: string,\r\n  callback: any,\r\n  index: number,\r\n  row: any\r\n) {\r\n  if (row.propertyType === 14) {\r\n    if (!keyWords.value.length) {\r\n      callback(new Error(\"话术关键词不能为空\"));\r\n    }\r\n    if (keyWords.value.length < 5) {\r\n      callback(new Error(\"话术关键词不能少于5个\"));\r\n    }\r\n  } else {\r\n    const list = row.value;\r\n    if (list.length && list.includes(row.optionBOList[index].id) && !value) {\r\n      callback(new Error(\"请输入\"));\r\n    }\r\n  }\r\n  callback();\r\n}\r\n\r\n// 获取上传文件数据\r\nfunction handleFile(value: any) {\r\n  const { ids, key } = value;\r\n  formData.componentList.forEach((item: any) => {\r\n    if (item.propertyKey === key) {\r\n      item.value = ids;\r\n    }\r\n  });\r\n}\r\n\r\n// 业务标签\r\nfunction handleBusinessLabel(item) {\r\n  const list = item.value;\r\n  const labelList = list.reduce((arr, item) => {\r\n    const labels = item.labels.map((sonItem) => {\r\n      sonItem.groupId = item.group.id;\r\n      return sonItem;\r\n    });\r\n    return arr.concat(labels);\r\n  }, []);\r\n  const labelValue = labelList.map((item) => `${item.id}&${item.groupId}`);\r\n  const groupLabelValue = list.map((item) => item.group.id);\r\n  businessLabelRef.value.trigger(true, {\r\n    labelValue,\r\n    groupLabelValue,\r\n  });\r\n}\r\n\r\n// 更新业务标签\r\nfunction updateBusinessLabel(data?: { value: any[]; labelText: any[] }) {\r\n  const labelInfo = formData.componentList.find(\r\n    (item) => item.propertyKey === \"business_label\"\r\n  );\r\n  labelInfo.value = data?.value ?? [];\r\n  labelInfo.labelText = data?.labelText ?? [];\r\n}\r\n\r\n// 关闭抽屉\r\nfunction handleClose() {\r\n  formData.componentList = [];\r\n  initData.visible = false;\r\n}\r\n\r\nfunction trigger(\r\n  visible: boolean,\r\n  type: \"add\" | \"edit\",\r\n  info: Record<string, any>,\r\n  data?: any\r\n) {\r\n  initData.visible = visible;\r\n  initData.type = type;\r\n  companyInfo.value = info;\r\n  initData.editComponents = data?.recordContentList;\r\n  initData.editId = data?.id;\r\n  if (visible) {\r\n    getAllList();\r\n  }\r\n}\r\n\r\ndefineExpose({\r\n  trigger,\r\n});\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.el-form {\r\n  padding-top: 5px;\r\n  :deep(.el-form-item__content) {\r\n    > .el-select {\r\n      width: calc(100% - 80px);\r\n    }\r\n  }\r\n}\r\n.business-label {\r\n  .label-list {\r\n    @include flex(initial, initial, column);\r\n    span {\r\n      line-height: 28px;\r\n    }\r\n  }\r\n}\r\n.form-tip {\r\n  width: 100%;\r\n  color: #9ca6b9;\r\n  font-size: 14px;\r\n  margin-left: 20px;\r\n}\r\n.dashed-tip {\r\n  padding: 20px 24px;\r\n  background: rgba(0, 86, 255, 0.03);\r\n  border-radius: 8px;\r\n  border: 1px dashed rgba(0, 86, 255, 0.2);\r\n  color: #646b7a;\r\n  line-height: 20px;\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import script from \"./supplement-info-drawer.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./supplement-info-drawer.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./supplement-info-drawer.vue?vue&type=style&index=0&id=2a831a70&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/.pnpm/vue-loader@17.4.2_@vue+compiler-sfc@3.5.13_vue@3.5.13_typescript@5.7.2__webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2a831a70\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","style","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_defineComponent","__name","emits","setup","__props","expose","__expose","emit","__emit","AddEditBusinessLabelDialog","defineAsyncComponent","AddEditSpeechLibraryDrawer","bd_userInfo","userInfo","bd_virCompanyId","virCompanyId","LocalStorage","batchGetItem","ruleFormRef","ref","businessLabelRef","addEditSpeechLibraryRef","keyWords","industryList","speechLibraryList","initData","reactive","type","visible","editComponents","editId","companyInfo","id","companyId","companyCode","companyName","businessType","formData","componentList","handleOperateTemplate","info","_addEditSpeechLibrary","params","value","subCompanyCode","toggle","submitForm","async","validate","valid","fields","oCardItem","find","item","propertyType","propertyKey","oCardValueLen","Array","isArray","length","split","lCardItem","lCardValueLen","ElNotification","title","saveReport","console","log","detailList","map","res","JSON","stringify","join","list","optionBOList","filter","v","includes","value2","mainId","remark","tagName","profileId","Number","profileName","realName","reportId","recordId","statusCode","msg","submitSupplementInfoApi","getData","ElMessage","message","handleClose","getAddReportComponentList","data","supplementInfoComponentListApi","handleData","handleEditData","forEach","componentBO","templateBOList","verifyBOList","isRequired","placeholder","maxLength","i","fileList","fileId","verifyFileInfo","verifyItem","fileLimit","optionInputValue","parse","String","arr","push","items","getAllList","Promise","all","getIndustryTree","getSpeechLibraryList","then","industryTreeApi","pageSize","pageNo","speechLibraryListApi","records","validateRule","row","rules","required","trigger","validateTemplateRule","callback","index","Error","handleFile","ids","handleBusinessLabel","labelList","reduce","labels","sonItem","groupId","group","concat","labelValue","groupLabelValue","updateBusinessLabel","labelInfo","labelText","recordContentList","_ctx","_cache","_component_el_button","_resolveComponent","_component_el_input","_component_el_form_item","_component_el_option","_component_el_select","_component_el_input_number","_component_el_radio","_component_el_radio_group","_component_el_checkbox","_component_el_checkbox_group","_component_CustomUpload","_component_el_cascader","_component_el_form","_component_el_empty","_component_el_drawer","_openBlock","_createElementBlock","_Fragment","_createVNode","modelValue","$event","size","onClose","footer","_withCtx","onClick","default","_createTextVNode","_","_createElementVNode","_createBlock","ref_key","model","_renderList","prop","label","_toDisplayString","labelItem","labelIndex","modelModifiers","trim","disabled","inputDisabled","_createSlots","unit","name","fn","undefined","_createCommentVNode","speechItem","rows","maxlength","precision","min","max","k","filterable","j","validator","rule","accept","defaultFileList","editData","maxVolume","limit","onEmitUpload","_unref","downLoadFile","fileUrl","emitPath","clearable","props","children","checkStrictly","options","description","onEmitFunc","__exports__"],"sourceRoot":""}